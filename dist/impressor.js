/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {// Generated by psc-bundle 0.7.3.0
	var PS = { };
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Prelude

	  //- Functor --------------------------------------------------------------------

	  exports.arrayMap = function (f) {
	    return function (arr) {
	      var l = arr.length;
	      var result = new Array(l);
	      for (var i = 0; i < l; i++) {
	        result[i] = f(arr[i]);
	      }
	      return result;
	    };
	  };

	  exports.concatArray = function (xs) {
	    return function (ys) {
	      return xs.concat(ys);
	    };
	  };

	  exports.showNumberImpl = function (n) {
	    /* jshint bitwise: false */
	    return n === (n | 0) ? n + ".0" : n.toString();
	  };
	 
	})(PS["Prelude"] = PS["Prelude"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Prelude"];
	  var LT = (function () {
	      function LT() {

	      };
	      LT.value = new LT();
	      return LT;
	  })();
	  var GT = (function () {
	      function GT() {

	      };
	      GT.value = new GT();
	      return GT;
	  })();
	  var Semigroupoid = function (compose) {
	      this.compose = compose;
	  };
	  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
	      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
	      this.id = id;
	  };
	  var Functor = function (map) {
	      this.map = map;
	  };
	  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
	      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
	      this.apply = apply;
	  };
	  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
	      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
	      this.pure = pure;
	  };
	  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
	      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
	      this.bind = bind;
	  };
	  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
	      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
	      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
	  };
	  var Semigroup = function (append) {
	      this.append = append;
	  };
	  var Show = function (show) {
	      this.show = show;
	  };                                                                           
	  var unit = {};
	  var showNumber = new Show($foreign.showNumberImpl);
	  var show = function (dict) {
	      return dict.show;
	  };                                                                     
	  var semigroupoidFn = new Semigroupoid(function (f) {
	      return function (g) {
	          return function (x) {
	              return f(g(x));
	          };
	      };
	  });
	  var semigroupArray = new Semigroup($foreign.concatArray);
	  var pure = function (dict) {
	      return dict.pure;
	  };
	  var $$return = function (__dict_Applicative_2) {
	      return pure(__dict_Applicative_2);
	  };
	  var otherwise = true;
	  var map = function (dict) {
	      return dict.map;
	  };
	  var $less$dollar$greater = function (__dict_Functor_5) {
	      return map(__dict_Functor_5);
	  };
	  var id = function (dict) {
	      return dict.id;
	  };
	  var functorArray = new Functor($foreign.arrayMap);
	  var flip = function (f) {
	      return function (b) {
	          return function (a) {
	              return f(a)(b);
	          };
	      };
	  };                
	  var eq = function (dict) {
	      return dict.eq;
	  };
	  var $eq$eq = function (__dict_Eq_7) {
	      return eq(__dict_Eq_7);
	  };
	  var $$const = function (a) {
	      return function (_112) {
	          return a;
	      };
	  };
	  var $$void = function (__dict_Functor_12) {
	      return function (fa) {
	          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
	      };
	  };
	  var compose = function (dict) {
	      return dict.compose;
	  };                                                   
	  var $less$less$less = function (__dict_Semigroupoid_14) {
	      return compose(__dict_Semigroupoid_14);
	  };
	  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
	      return flip(compose(__dict_Semigroupoid_15));
	  };
	  var compare = function (dict) {
	      return dict.compare;
	  };
	  var $less = function (__dict_Ord_17) {
	      return function (a1) {
	          return function (a2) {
	              var _981 = compare(__dict_Ord_17)(a1)(a2);
	              if (_981 instanceof LT) {
	                  return true;
	              };
	              return false;
	          };
	      };
	  };
	  var $less$eq = function (__dict_Ord_18) {
	      return function (a1) {
	          return function (a2) {
	              var _982 = compare(__dict_Ord_18)(a1)(a2);
	              if (_982 instanceof GT) {
	                  return false;
	              };
	              return true;
	          };
	      };
	  };
	  var categoryFn = new Category(function () {
	      return semigroupoidFn;
	  }, function (x) {
	      return x;
	  });
	  var bind = function (dict) {
	      return dict.bind;
	  };
	  var liftM1 = function (__dict_Monad_23) {
	      return function (f) {
	          return function (a) {
	              return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_24) {
	                  return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_24));
	              });
	          };
	      };
	  };
	  var $greater$greater$eq = function (__dict_Bind_24) {
	      return bind(__dict_Bind_24);
	  }; 
	  var apply = function (dict) {
	      return dict.apply;
	  };
	  var $less$times$greater = function (__dict_Apply_25) {
	      return apply(__dict_Apply_25);
	  };
	  var liftA1 = function (__dict_Applicative_26) {
	      return function (f) {
	          return function (a) {
	              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
	          };
	      };
	  }; 
	  var append = function (dict) {
	      return dict.append;
	  };
	  var $less$greater = function (__dict_Semigroup_28) {
	      return append(__dict_Semigroup_28);
	  };
	  var ap = function (__dict_Monad_30) {
	      return function (f) {
	          return function (a) {
	              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_26) {
	                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_25) {
	                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_26(_25));
	                  });
	              });
	          };
	      };
	  };
	  exports["LT"] = LT;
	  exports["GT"] = GT;
	  exports["Show"] = Show;
	  exports["Semigroup"] = Semigroup;
	  exports["Monad"] = Monad;
	  exports["Bind"] = Bind;
	  exports["Applicative"] = Applicative;
	  exports["Apply"] = Apply;
	  exports["Functor"] = Functor;
	  exports["Category"] = Category;
	  exports["Semigroupoid"] = Semigroupoid;
	  exports["show"] = show;
	  exports["<="] = $less$eq;
	  exports["<"] = $less;
	  exports["compare"] = compare;
	  exports["=="] = $eq$eq;
	  exports["eq"] = eq;
	  exports["<>"] = $less$greater;
	  exports["append"] = append;
	  exports["ap"] = ap;
	  exports["liftM1"] = liftM1;
	  exports["return"] = $$return;
	  exports[">>="] = $greater$greater$eq;
	  exports["bind"] = bind;
	  exports["liftA1"] = liftA1;
	  exports["pure"] = pure;
	  exports["<*>"] = $less$times$greater;
	  exports["apply"] = apply;
	  exports["void"] = $$void;
	  exports["<$>"] = $less$dollar$greater;
	  exports["map"] = map;
	  exports["id"] = id;
	  exports[">>>"] = $greater$greater$greater;
	  exports["<<<"] = $less$less$less;
	  exports["compose"] = compose;
	  exports["otherwise"] = otherwise;
	  exports["const"] = $$const;
	  exports["flip"] = flip;
	  exports["unit"] = unit;
	  exports["semigroupoidFn"] = semigroupoidFn;
	  exports["categoryFn"] = categoryFn;
	  exports["functorArray"] = functorArray;
	  exports["semigroupArray"] = semigroupArray;
	  exports["showNumber"] = showNumber;;
	 
	})(PS["Prelude"] = PS["Prelude"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
	      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
	      this.alt = alt;
	  };                                         
	  var alt = function (dict) {
	      return dict.alt;
	  };
	  var $less$bar$greater = function (__dict_Alt_0) {
	      return alt(__dict_Alt_0);
	  };
	  exports["Alt"] = Alt;
	  exports["<|>"] = $less$bar$greater;
	  exports["alt"] = alt;;
	 
	})(PS["Control.Alt"] = PS["Control.Alt"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var $times$greater = function (__dict_Apply_1) {
	      return function (a) {
	          return function (b) {
	              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
	          };
	      };
	  };
	  exports["*>"] = $times$greater;;
	 
	})(PS["Control.Apply"] = PS["Control.Apply"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var $eq$less$less = function (__dict_Bind_1) {
	      return function (f) {
	          return function (m) {
	              return Prelude[">>="](__dict_Bind_1)(m)(f);
	          };
	      };
	  };
	  var $less$eq$less = function (__dict_Bind_2) {
	      return function (f) {
	          return function (g) {
	              return function (a) {
	                  return $eq$less$less(__dict_Bind_2)(f)(g(a));
	              };
	          };
	      };
	  };
	  exports["<=<"] = $less$eq$less;
	  exports["=<<"] = $eq$less$less;;
	 
	})(PS["Control.Bind"] = PS["Control.Bind"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
	      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
	      this.mempty = mempty;
	  };     
	  var monoidArray = new Monoid(function () {
	      return Prelude.semigroupArray;
	  }, [  ]);
	  var mempty = function (dict) {
	      return dict.mempty;
	  };
	  exports["Monoid"] = Monoid;
	  exports["mempty"] = mempty;
	  exports["monoidArray"] = monoidArray;;
	 
	})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Data.Foldable

	  exports.foldrArray = function (f) {
	    return function (init) {
	      return function (xs) {
	        var acc = init;
	        var len = xs.length;
	        for (var i = len - 1; i >= 0; i--) {
	          acc = f(xs[i])(acc);
	        }
	        return acc;
	      };
	    };
	  };

	  exports.foldlArray = function (f) {
	    return function (init) {
	      return function (xs) {
	        var acc = init;
	        var len = xs.length;
	        for (var i = 0; i < len; i++) {
	          acc = f(acc)(xs[i]);
	        }
	        return acc;
	      };
	    };
	  };
	 
	})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_Extend = PS["Control.Extend"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];
	  var Control_Plus = PS["Control.Plus"];
	  var Data_Monoid = PS["Data.Monoid"];     
	  var Nothing = (function () {
	      function Nothing() {

	      };
	      Nothing.value = new Nothing();
	      return Nothing;
	  })();
	  var Just = (function () {
	      function Just(value0) {
	          this.value0 = value0;
	      };
	      Just.create = function (value0) {
	          return new Just(value0);
	      };
	      return Just;
	  })();
	  var maybe$prime = function (g) {
	      return function (f) {
	          return function (_324) {
	              if (_324 instanceof Nothing) {
	                  return g(Prelude.unit);
	              };
	              if (_324 instanceof Just) {
	                  return f(_324.value0);
	              };
	              throw new Error("Failed pattern match at Data.Maybe line 39, column 1 - line 40, column 1: " + [ g.constructor.name, f.constructor.name, _324.constructor.name ]);
	          };
	      };
	  };
	  var maybe = function (b) {
	      return function (f) {
	          return function (_323) {
	              if (_323 instanceof Nothing) {
	                  return b;
	              };
	              if (_323 instanceof Just) {
	                  return f(_323.value0);
	              };
	              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _323.constructor.name ]);
	          };
	      };
	  };
	  var isNothing = maybe(true)(Prelude["const"](false));
	  var functorMaybe = new Prelude.Functor(function (fn) {
	      return function (_325) {
	          if (_325 instanceof Just) {
	              return new Just(fn(_325.value0));
	          };
	          return Nothing.value;
	      };
	  });                                                                                                   
	  var fromMaybe$prime = function (a) {
	      return maybe$prime(a)(Prelude.id(Prelude.categoryFn));
	  }; 
	  var altMaybe = new Control_Alt.Alt(function () {
	      return functorMaybe;
	  }, function (_327) {
	      return function (r) {
	          if (_327 instanceof Nothing) {
	              return r;
	          };
	          return _327;
	      };
	  });
	  exports["Nothing"] = Nothing;
	  exports["Just"] = Just;
	  exports["isNothing"] = isNothing;
	  exports["fromMaybe'"] = fromMaybe$prime;
	  exports["maybe"] = maybe;
	  exports["functorMaybe"] = functorMaybe;
	  exports["altMaybe"] = altMaybe;;
	 
	})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Foldable"];
	  var Prelude = PS["Prelude"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Apply = PS["Control.Apply"];
	  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
	  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Maybe_First = PS["Data.Maybe.First"];
	  var Data_Maybe_Last = PS["Data.Maybe.Last"];
	  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
	  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
	  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
	  var Foldable = function (foldMap, foldl, foldr) {
	      this.foldMap = foldMap;
	      this.foldl = foldl;
	      this.foldr = foldr;
	  };
	  var foldr = function (dict) {
	      return dict.foldr;
	  };
	  var traverse_ = function (__dict_Applicative_0) {
	      return function (__dict_Foldable_1) {
	          return function (f) {
	              return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
	          };
	      };
	  };
	  var for_ = function (__dict_Applicative_2) {
	      return function (__dict_Foldable_3) {
	          return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
	      };
	  };
	  var foldl = function (dict) {
	      return dict.foldl;
	  }; 
	  var foldableArray = new Foldable(function (__dict_Monoid_19) {
	      return function (f) {
	          return function (xs) {
	              return foldr(foldableArray)(function (x) {
	                  return function (acc) {
	                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
	                  };
	              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
	          };
	      };
	  }, $foreign.foldlArray, $foreign.foldrArray);
	  var foldMap = function (dict) {
	      return dict.foldMap;
	  }; 
	  var fold = function (__dict_Foldable_23) {
	      return function (__dict_Monoid_24) {
	          return foldMap(__dict_Foldable_23)(__dict_Monoid_24)(Prelude.id(Prelude.categoryFn));
	      };
	  };
	  exports["Foldable"] = Foldable;
	  exports["for_"] = for_;
	  exports["traverse_"] = traverse_;
	  exports["fold"] = fold;
	  exports["foldMap"] = foldMap;
	  exports["foldl"] = foldl;
	  exports["foldr"] = foldr;
	  exports["foldableArray"] = foldableArray;;
	 
	})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Data.Traversable

	  // jshint maxparams: 3

	  exports.traverseArrayImpl = function () {
	    function Cont (fn) {
	      this.fn = fn;
	    }

	    var emptyList = {};

	    var ConsCell = function (head, tail) {
	      this.head = head;
	      this.tail = tail;
	    };

	    function consList (x) {
	      return function (xs) {
	        return new ConsCell(x, xs);
	      };
	    }

	    function listToArray (list) {
	      var arr = [];
	      while (list !== emptyList) {
	        arr.push(list.head);
	        list = list.tail;
	      }
	      return arr;
	    }

	    return function (apply) {
	      return function (map) {
	        return function (pure) {
	          return function (f) {
	            var buildFrom = function (x, ys) {
	              return apply(map(consList)(f(x)))(ys);
	            };

	            var go = function (acc, currentLen, xs) {
	              if (currentLen === 0) {
	                return acc;
	              } else {
	                var last = xs[currentLen - 1];
	                return new Cont(function () {
	                  return go(buildFrom(last, acc), currentLen - 1, xs);
	                });
	              }
	            };

	            return function (array) {
	              var result = go(pure(emptyList), array.length, array);
	              while (result instanceof Cont) {
	                result = result.fn();
	              }

	              return map(listToArray)(result);
	            };
	          };
	        };
	      };
	    };
	  }();
	 
	})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Traversable"];
	  var Prelude = PS["Prelude"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Maybe_First = PS["Data.Maybe.First"];
	  var Data_Maybe_Last = PS["Data.Maybe.Last"];
	  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
	  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
	  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
	  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
	  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
	  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
	      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
	      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
	      this.sequence = sequence;
	      this.traverse = traverse;
	  };
	  var traverse = function (dict) {
	      return dict.traverse;
	  }; 
	  var traversableArray = new Traversable(function () {
	      return Data_Foldable.foldableArray;
	  }, function () {
	      return Prelude.functorArray;
	  }, function (__dict_Applicative_11) {
	      return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
	  }, function (__dict_Applicative_10) {
	      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
	  });
	  var sequence = function (dict) {
	      return dict.sequence;
	  };
	  exports["Traversable"] = Traversable;
	  exports["sequence"] = sequence;
	  exports["traverse"] = traverse;
	  exports["traversableArray"] = traversableArray;;
	 
	})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
	  var Control_Comonad = PS["Control.Comonad"];
	  var Control_Extend = PS["Control.Extend"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Traversable = PS["Data.Traversable"];     
	  var Identity = function (x) {
	      return x;
	  };
	  var runIdentity = function (_473) {
	      return _473;
	  };
	  var functorIdentity = new Prelude.Functor(function (f) {
	      return function (_496) {
	          return f(_496);
	      };
	  });
	  var applyIdentity = new Prelude.Apply(function () {
	      return functorIdentity;
	  }, function (_497) {
	      return function (_498) {
	          return _497(_498);
	      };
	  });
	  var bindIdentity = new Prelude.Bind(function () {
	      return applyIdentity;
	  }, function (_499) {
	      return function (f) {
	          return f(_499);
	      };
	  });
	  var applicativeIdentity = new Prelude.Applicative(function () {
	      return applyIdentity;
	  }, Identity);
	  var monadIdentity = new Prelude.Monad(function () {
	      return applicativeIdentity;
	  }, function () {
	      return bindIdentity;
	  });
	  exports["Identity"] = Identity;
	  exports["runIdentity"] = runIdentity;
	  exports["functorIdentity"] = functorIdentity;
	  exports["applyIdentity"] = applyIdentity;
	  exports["applicativeIdentity"] = applicativeIdentity;
	  exports["bindIdentity"] = bindIdentity;
	  exports["monadIdentity"] = monadIdentity;;
	 
	})(PS["Data.Identity"] = PS["Data.Identity"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Control.Monad.Eff

	  exports.returnE = function (a) {
	    return function () {
	      return a;
	    };
	  };

	  exports.bindE = function (a) {
	    return function (f) {
	      return function () {
	        return f(a())();
	      };
	    };
	  };

	  exports.runPure = function (f) {
	    return f();
	  };
	 
	})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Eff"];
	  var Prelude = PS["Prelude"];     
	  var monadEff = new Prelude.Monad(function () {
	      return applicativeEff;
	  }, function () {
	      return bindEff;
	  });
	  var bindEff = new Prelude.Bind(function () {
	      return applyEff;
	  }, $foreign.bindE);
	  var applyEff = new Prelude.Apply(function () {
	      return functorEff;
	  }, Prelude.ap(monadEff));
	  var applicativeEff = new Prelude.Applicative(function () {
	      return applyEff;
	  }, $foreign.returnE);
	  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
	  exports["functorEff"] = functorEff;
	  exports["applyEff"] = applyEff;
	  exports["applicativeEff"] = applicativeEff;
	  exports["bindEff"] = bindEff;
	  exports["monadEff"] = monadEff;
	  exports["runPure"] = $foreign.runPure;;
	 
	})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var $less$dollar = function (__dict_Functor_0) {
	      return function (x) {
	          return function (f) {
	              return Prelude["<$>"](__dict_Functor_0)(Prelude["const"](x))(f);
	          };
	      };
	  };
	  var $dollar$greater = function (__dict_Functor_1) {
	      return function (f) {
	          return function (x) {
	              return Prelude["<$>"](__dict_Functor_1)(Prelude["const"](x))(f);
	          };
	      };
	  };
	  exports["$>"] = $dollar$greater;
	  exports["<$"] = $less$dollar;;
	 
	})(PS["Data.Functor"] = PS["Data.Functor"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var Bifunctor = function (bimap) {
	      this.bimap = bimap;
	  };
	  var bimap = function (dict) {
	      return dict.bimap;
	  };
	  var lmap = function (__dict_Bifunctor_0) {
	      return function (f) {
	          return bimap(__dict_Bifunctor_0)(f)(Prelude.id(Prelude.categoryFn));
	      };
	  };
	  var rmap = function (__dict_Bifunctor_1) {
	      return bimap(__dict_Bifunctor_1)(Prelude.id(Prelude.categoryFn));
	  };
	  exports["Bifunctor"] = Bifunctor;
	  exports["rmap"] = rmap;
	  exports["lmap"] = lmap;
	  exports["bimap"] = bimap;;
	 
	})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Extend = PS["Control.Extend"];
	  var Data_Bifoldable = PS["Data.Bifoldable"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Data_Bitraversable = PS["Data.Bitraversable"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Traversable = PS["Data.Traversable"];     
	  var Left = (function () {
	      function Left(value0) {
	          this.value0 = value0;
	      };
	      Left.create = function (value0) {
	          return new Left(value0);
	      };
	      return Left;
	  })();
	  var Right = (function () {
	      function Right(value0) {
	          this.value0 = value0;
	      };
	      Right.create = function (value0) {
	          return new Right(value0);
	      };
	      return Right;
	  })();
	  var functorEither = new Prelude.Functor(function (f) {
	      return function (_439) {
	          if (_439 instanceof Left) {
	              return new Left(_439.value0);
	          };
	          if (_439 instanceof Right) {
	              return new Right(f(_439.value0));
	          };
	          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _439.constructor.name ]);
	      };
	  });
	  var either = function (f) {
	      return function (g) {
	          return function (_438) {
	              if (_438 instanceof Left) {
	                  return f(_438.value0);
	              };
	              if (_438 instanceof Right) {
	                  return g(_438.value0);
	              };
	              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _438.constructor.name ]);
	          };
	      };
	  };
	  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
	      return function (g) {
	          return function (_440) {
	              if (_440 instanceof Left) {
	                  return new Left(f(_440.value0));
	              };
	              if (_440 instanceof Right) {
	                  return new Right(g(_440.value0));
	              };
	              throw new Error("Failed pattern match at Data.Either line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _440.constructor.name ]);
	          };
	      };
	  });
	  var applyEither = new Prelude.Apply(function () {
	      return functorEither;
	  }, function (_441) {
	      return function (r) {
	          if (_441 instanceof Left) {
	              return new Left(_441.value0);
	          };
	          if (_441 instanceof Right) {
	              return Prelude["<$>"](functorEither)(_441.value0)(r);
	          };
	          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _441.constructor.name, r.constructor.name ]);
	      };
	  });
	  exports["Left"] = Left;
	  exports["Right"] = Right;
	  exports["either"] = either;
	  exports["functorEither"] = functorEither;
	  exports["bifunctorEither"] = bifunctorEither;
	  exports["applyEither"] = applyEither;;
	 
	})(PS["Data.Either"] = PS["Data.Either"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Identity = PS["Data.Identity"];
	  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
	  var Control_Monad_ST = PS["Control.Monad.ST"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Either_Unsafe = PS["Data.Either.Unsafe"];
	  var Data_Functor = PS["Data.Functor"];
	  var Data_Either = PS["Data.Either"];     
	  var MonadRec = function (__superclass_Prelude$dotMonad_0, tailRecM) {
	      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
	      this.tailRecM = tailRecM;
	  };
	  var tailRecM = function (dict) {
	      return dict.tailRecM;
	  };             
	  var forever = function (__dict_MonadRec_2) {
	      return function (ma) {
	          return tailRecM(__dict_MonadRec_2)(function (u) {
	              return Data_Functor["<$"]((((__dict_MonadRec_2["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(new Data_Either.Left(u))(ma);
	          })(Prelude.unit);
	      };
	  };
	  exports["MonadRec"] = MonadRec;
	  exports["forever"] = forever;
	  exports["tailRecM"] = tailRecM;;
	 
	})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Data.Exists

	  exports.mkExists = function (fa) {
	    return fa;
	  };

	  exports.runExists = function (f) {
	    return function (fa) {
	      return f(fa);
	    };
	  };
	 
	})(PS["Data.Exists"] = PS["Data.Exists"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Exists"];
	  var Prelude = PS["Prelude"];
	  exports["runExists"] = $foreign.runExists;
	  exports["mkExists"] = $foreign.mkExists;;
	 
	})(PS["Data.Exists"] = PS["Data.Exists"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
	  var Control_Lazy = PS["Control.Lazy"];
	  var Data_Maybe_First = PS["Data.Maybe.First"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Control_Biapplicative = PS["Control.Biapplicative"];
	  var Control_Biapply = PS["Control.Biapply"];
	  var Control_Comonad = PS["Control.Comonad"];
	  var Control_Extend = PS["Control.Extend"];
	  var Data_Bifoldable = PS["Data.Bifoldable"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Data_Bitraversable = PS["Data.Bitraversable"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Traversable = PS["Data.Traversable"];     
	  var Tuple = (function () {
	      function Tuple(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Tuple.create = function (value0) {
	          return function (value1) {
	              return new Tuple(value0, value1);
	          };
	      };
	      return Tuple;
	  })();
	  exports["Tuple"] = Tuple;;
	 
	})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var MonadTrans = function (lift) {
	      this.lift = lift;
	  };
	  var lift = function (dict) {
	      return dict.lift;
	  };
	  exports["MonadTrans"] = MonadTrans;
	  exports["lift"] = lift;;
	 
	})(PS["Control.Monad.Trans"] = PS["Control.Monad.Trans"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_Exists = PS["Data.Exists"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Control_Bind = PS["Control.Bind"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Either = PS["Data.Either"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];     
	  var Bound = (function () {
	      function Bound(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Bound.create = function (value0) {
	          return function (value1) {
	              return new Bound(value0, value1);
	          };
	      };
	      return Bound;
	  })();
	  var FreeT = (function () {
	      function FreeT(value0) {
	          this.value0 = value0;
	      };
	      FreeT.create = function (value0) {
	          return new FreeT(value0);
	      };
	      return FreeT;
	  })();
	  var Bind = (function () {
	      function Bind(value0) {
	          this.value0 = value0;
	      };
	      Bind.create = function (value0) {
	          return new Bind(value0);
	      };
	      return Bind;
	  })();
	  var monadTransFreeT = function (__dict_Functor_4) {
	      return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_5) {
	          return function (ma) {
	              return new FreeT(function (_592) {
	                  return Prelude.map(((__dict_Monad_5["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(ma);
	              });
	          };
	      });
	  };
	  var freeT = FreeT.create;
	  var bound = function (m) {
	      return function (f) {
	          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
	      };
	  };
	  var functorFreeT = function (__dict_Functor_12) {
	      return function (__dict_Functor_13) {
	          return new Prelude.Functor(function (f) {
	              return function (_598) {
	                  if (_598 instanceof FreeT) {
	                      return new FreeT(function (_586) {
	                          return Prelude.map(__dict_Functor_13)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Prelude.map(__dict_Functor_12)(Prelude.map(functorFreeT(__dict_Functor_12)(__dict_Functor_13))(f))))(_598.value0(Prelude.unit));
	                      });
	                  };
	                  if (_598 instanceof Bind) {
	                      return Data_Exists.runExists(function (_587) {
	                          return bound(_587.value0)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(functorFreeT(__dict_Functor_12)(__dict_Functor_13))(f))(_587.value1));
	                      })(_598.value0);
	                  };
	                  throw new Error("Failed pattern match: " + [ f.constructor.name, _598.constructor.name ]);
	              };
	          });
	      };
	  };
	  var monadFreeT = function (__dict_Functor_8) {
	      return function (__dict_Monad_9) {
	          return new Prelude.Monad(function () {
	              return applicativeFreeT(__dict_Functor_8)(__dict_Monad_9);
	          }, function () {
	              return bindFreeT(__dict_Functor_8)(__dict_Monad_9);
	          });
	      };
	  };
	  var bindFreeT = function (__dict_Functor_14) {
	      return function (__dict_Monad_15) {
	          return new Prelude.Bind(function () {
	              return applyFreeT(__dict_Functor_14)(__dict_Monad_15);
	          }, function (_599) {
	              return function (f) {
	                  if (_599 instanceof Bind) {
	                      return Data_Exists.runExists(function (_590) {
	                          return bound(_590.value0)(function (x) {
	                              return bound(function (_589) {
	                                  return _590.value1(x);
	                              })(f);
	                          });
	                      })(_599.value0);
	                  };
	                  return bound(function (_591) {
	                      return _599;
	                  })(f);
	              };
	          });
	      };
	  };
	  var applyFreeT = function (__dict_Functor_22) {
	      return function (__dict_Monad_23) {
	          return new Prelude.Apply(function () {
	              return functorFreeT(__dict_Functor_22)(((__dict_Monad_23["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
	          }, Prelude.ap(monadFreeT(__dict_Functor_22)(__dict_Monad_23)));
	      };
	  };
	  var applicativeFreeT = function (__dict_Functor_24) {
	      return function (__dict_Monad_25) {
	          return new Prelude.Applicative(function () {
	              return applyFreeT(__dict_Functor_24)(__dict_Monad_25);
	          }, function (a) {
	              return new FreeT(function (_588) {
	                  return Prelude.pure(__dict_Monad_25["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(a));
	              });
	          });
	      };
	  };
	  var liftFreeT = function (__dict_Functor_10) {
	      return function (__dict_Monad_11) {
	          return function (fa) {
	              return new FreeT(function (_593) {
	                  return Prelude["return"](__dict_Monad_11["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(Prelude.map(__dict_Functor_10)(Prelude.pure(applicativeFreeT(__dict_Functor_10)(__dict_Monad_11)))(fa)));
	              });
	          };
	      };
	  };
	  var resume = function (__dict_Functor_0) {
	      return function (__dict_MonadRec_1) {
	          var go = function (_597) {
	              if (_597 instanceof FreeT) {
	                  return Prelude.map((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_597.value0(Prelude.unit));
	              };
	              if (_597 instanceof Bind) {
	                  return Data_Exists.runExists(function (_585) {
	                      var _1131 = _585.value0(Prelude.unit);
	                      if (_1131 instanceof FreeT) {
	                          return Prelude.bind((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(_1131.value0(Prelude.unit))(function (_41) {
	                              if (_41 instanceof Data_Either.Left) {
	                                  return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_585.value1(_41.value0)));
	                              };
	                              if (_41 instanceof Data_Either.Right) {
	                                  return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(new Data_Either.Right(Prelude.map(__dict_Functor_0)(function (h) {
	                                      return Prelude[">>="](bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(h)(_585.value1);
	                                  })(_41.value0))));
	                              };
	                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 45, column 3 - line 46, column 3: " + [ _41.constructor.name ]);
	                          });
	                      };
	                      if (_1131 instanceof Bind) {
	                          return Data_Exists.runExists(function (_584) {
	                              return Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(Prelude.bind(bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(_584.value0(Prelude.unit))(function (z) {
	                                  return Prelude[">>="](bindFreeT(__dict_Functor_0)(__dict_MonadRec_1["__superclass_Prelude.Monad_0"]()))(_584.value1(z))(_585.value1);
	                              })));
	                          })(_1131.value0);
	                      };
	                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 45, column 3 - line 46, column 3: " + [ _1131.constructor.name ]);
	                  })(_597.value0);
	              };
	              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 45, column 3 - line 46, column 3: " + [ _597.constructor.name ]);
	          };
	          return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_1)(go);
	      };
	  };
	  var runFreeT = function (__dict_Functor_2) {
	      return function (__dict_MonadRec_3) {
	          return function (interp) {
	              var go = function (_600) {
	                  if (_600 instanceof Data_Either.Left) {
	                      return Prelude["return"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_600.value0));
	                  };
	                  if (_600 instanceof Data_Either.Right) {
	                      return Prelude.bind((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(interp(_600.value0))(function (_43) {
	                          return Prelude["return"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_43));
	                      });
	                  };
	                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 105, column 3 - line 106, column 3: " + [ _600.constructor.name ]);
	              };
	              return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_3)(Control_Bind["<=<"]((__dict_MonadRec_3["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(go)(resume(__dict_Functor_2)(__dict_MonadRec_3)));
	          };
	      };
	  };
	  var monadRecFreeT = function (__dict_Functor_6) {
	      return function (__dict_Monad_7) {
	          return new Control_Monad_Rec_Class.MonadRec(function () {
	              return monadFreeT(__dict_Functor_6)(__dict_Monad_7);
	          }, function (f) {
	              var go = function (s) {
	                  return Prelude.bind(bindFreeT(__dict_Functor_6)(__dict_Monad_7))(f(s))(function (_42) {
	                      if (_42 instanceof Data_Either.Left) {
	                          return go(_42.value0);
	                      };
	                      if (_42 instanceof Data_Either.Right) {
	                          return Prelude["return"](applicativeFreeT(__dict_Functor_6)(__dict_Monad_7))(_42.value0);
	                      };
	                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 75, column 1 - line 85, column 1: " + [ _42.constructor.name ]);
	                  });
	              };
	              return go;
	          });
	      };
	  };
	  exports["runFreeT"] = runFreeT;
	  exports["resume"] = resume;
	  exports["liftFreeT"] = liftFreeT;
	  exports["freeT"] = freeT;
	  exports["functorFreeT"] = functorFreeT;
	  exports["applyFreeT"] = applyFreeT;
	  exports["applicativeFreeT"] = applicativeFreeT;
	  exports["bindFreeT"] = bindFreeT;
	  exports["monadFreeT"] = monadFreeT;
	  exports["monadTransFreeT"] = monadTransFreeT;
	  exports["monadRecFreeT"] = monadRecFreeT;;
	 
	})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var Profunctor = function (dimap) {
	      this.dimap = dimap;
	  };
	  var profunctorFn = new Profunctor(function (a2b) {
	      return function (c2d) {
	          return function (b2c) {
	              return Prelude[">>>"](Prelude.semigroupoidFn)(a2b)(Prelude[">>>"](Prelude.semigroupoidFn)(b2c)(c2d));
	          };
	      };
	  });
	  var dimap = function (dict) {
	      return dict.dimap;
	  };
	  var rmap = function (__dict_Profunctor_1) {
	      return function (b2c) {
	          return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryFn))(b2c);
	      };
	  };
	  exports["Profunctor"] = Profunctor;
	  exports["rmap"] = rmap;
	  exports["dimap"] = dimap;
	  exports["profunctorFn"] = profunctorFn;;
	 
	})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Prelude = PS["Prelude"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
	  var Data_Identity = PS["Data.Identity"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Data_Functor = PS["Data.Functor"];
	  var Data_Profunctor = PS["Data.Profunctor"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Either = PS["Data.Either"];
	  var Emit = (function () {
	      function Emit(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Emit.create = function (value0) {
	          return function (value1) {
	              return new Emit(value0, value1);
	          };
	      };
	      return Emit;
	  })();
	  var runProcess = function (__dict_MonadRec_1) {
	      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(__dict_MonadRec_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"]((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]()))(Data_Identity.runIdentity));
	  };
	  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
	      return function (g) {
	          return function (_619) {
	              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(_619);
	          };
	      };
	  });
	  var fuseWith = function (__dict_Functor_4) {
	      return function (__dict_Functor_5) {
	          return function (__dict_Functor_6) {
	              return function (__dict_MonadRec_7) {
	                  return function (zap) {
	                      return function (fs) {
	                          return function (gs) {
	                              var go = function (_617) {
	                                  return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_5)(__dict_MonadRec_7)(_617.value1))(function (_45) {
	                                      return Prelude.bind((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Bind_1"]())(Control_Monad_Free_Trans.resume(__dict_Functor_4)(__dict_MonadRec_7)(_617.value0))(function (_44) {
	                                          var _1108 = Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(zap(Data_Tuple.Tuple.create))(_44))(_45);
	                                          if (_1108 instanceof Data_Either.Left) {
	                                              return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_1108.value0));
	                                          };
	                                          if (_1108 instanceof Data_Either.Right) {
	                                              return Prelude["return"]((__dict_MonadRec_7["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(Prelude.map(__dict_Functor_6)(function (t) {
	                                                  return Control_Monad_Free_Trans.freeT(function (_602) {
	                                                      return go(t);
	                                                  });
	                                              })(_1108.value0)));
	                                          };
	                                          throw new Error("Failed pattern match at Control.Coroutine line 49, column 1 - line 54, column 1: " + [ _1108.constructor.name ]);
	                                      });
	                                  });
	                              };
	                              return Control_Monad_Free_Trans.freeT(function (_603) {
	                                  return go(new Data_Tuple.Tuple(fs, gs));
	                              });
	                          };
	                      };
	                  };
	              };
	          };
	      };
	  };
	  var functorAwait = new Prelude.Functor(Data_Profunctor.rmap(profunctorAwait));
	  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
	      return function (g) {
	          return function (_618) {
	              return new Emit(f(_618.value0), g(_618.value1));
	          };
	      };
	  });
	  var functorEmit = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorEmit));
	  var $dollar$dollar = function (__dict_MonadRec_8) {
	      return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(__dict_MonadRec_8)(function (f) {
	          return function (_605) {
	              return function (_604) {
	                  return f(_605.value1)(_604(_605.value0));
	              };
	          };
	      });
	  };
	  var await = function (__dict_Monad_16) {
	      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(__dict_Monad_16)(Prelude.id(Prelude.categoryFn));
	  };
	  exports["Emit"] = Emit;
	  exports["$$"] = $dollar$dollar;
	  exports["await"] = await;
	  exports["fuseWith"] = fuseWith;
	  exports["runProcess"] = runProcess;
	  exports["bifunctorEmit"] = bifunctorEmit;
	  exports["functorEmit"] = functorEmit;
	  exports["profunctorAwait"] = profunctorAwait;
	  exports["functorAwait"] = functorAwait;;
	 
	})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];     
	  var when = function (__dict_Monad_0) {
	      return function (_195) {
	          return function (m) {
	              if (_195) {
	                  return m;
	              };
	              if (!_195) {
	                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
	              };
	              throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ _195.constructor.name, m.constructor.name ]);
	          };
	      };
	  };
	  exports["when"] = when;;
	 
	})(PS["Control.Monad"] = PS["Control.Monad"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports._setTimeout = function (nonCanceler, millis, aff) {
	    var set = setTimeout, clear = clearTimeout;
	    if (millis <= 0 && typeof setImmediate === "function") {
	      set = setImmediate;
	      clear = clearImmediate;
	    }
	    return function(success, error) {
	      var canceler;

	      var timeout = set(function() {
	        canceler = aff(success, error);
	      }, millis);

	      return function(e) {
	        return function(s, f) {
	          if (canceler !== undefined) {
	            return canceler(e)(s, f);
	          } else {
	            clear(timeout);

	            try {
	              s(true);
	            } catch (e) {
	              f(e);
	            }

	            return nonCanceler;
	          }
	        };
	      };
	    };
	  }

	  exports._pure = function (nonCanceler, v) {
	    return function(success, error) {
	      try {
	        success(v);
	      } catch (e) {
	        error(e);
	      }

	      return nonCanceler;
	    };
	  }

	  exports._fmap = function (f, aff) {
	    return function(success, error) {
	      return aff(function(v) {
	        try {
	          success(f(v));
	        } catch (e) {
	          error(e);
	        }
	      }, error);
	    };
	  }

	  exports._bind = function (alwaysCanceler, aff, f) {
	    return function(success, error) {
	      var canceler1, canceler2;

	      var isCanceled    = false;
	      var requestCancel = false;

	      var onCanceler = function(){};

	      canceler1 = aff(function(v) {
	        if (requestCancel) {
	          isCanceled = true;

	          return alwaysCanceler;
	        } else {
	          canceler2 = f(v)(success, error);

	          onCanceler(canceler2);

	          return canceler2;
	        }
	      }, error);

	      return function(e) {
	        return function(s, f) {
	          requestCancel = true;

	          if (canceler2 !== undefined) {
	            return canceler2(e)(s, f);
	          } else {
	            return canceler1(e)(function(bool) {
	              if (bool || isCanceled) {
	                try {
	                  s(true);
	                } catch (e) {
	                  f(e);
	                }
	              } else {
	                onCanceler = function(canceler) {
	                  canceler(e)(s, f);
	                };
	              }
	            }, f);
	          }
	        };
	      };
	    };
	  }

	  exports._runAff = function (errorT, successT, aff) {
	    return function() {
	      return aff(function(v) {
	        try {
	          successT(v)();
	        } catch (e) {
	          errorT(e)();
	        }
	      }, function(e) {
	        errorT(e)();
	      });
	    };
	  }

	  exports._liftEff = function (nonCanceler, e) {
	    return function(success, error) {
	      try {
	        success(e());
	      } catch (e) {
	        error(e);
	      }

	      return nonCanceler;
	    };
	  }
	 
	})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.runFn2 = function (fn) {
	    return function (a) {
	      return function (b) {
	        return fn(a, b);
	      };
	    };
	  };

	  exports.runFn4 = function (fn) {
	    return function (a) {
	      return function (b) {
	        return function (c) {
	          return function (d) {
	            return fn(a, b, c, d);
	          };
	        };
	      };
	    };
	  };
	 
	})(PS["Data.Function"] = PS["Data.Function"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Function"];
	  var Prelude = PS["Prelude"];
	  exports["runFn4"] = $foreign.runFn4;
	  exports["runFn2"] = $foreign.runFn2;;
	 
	})(PS["Data.Function"] = PS["Data.Function"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.throwException = function (e) {
	    return function () {
	      throw e;
	    };
	  };
	 
	})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Eff.Exception"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  exports["throwException"] = $foreign.throwException;;
	 
	})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
	  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
	      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
	      this.liftEff = liftEff;
	  };                                 
	  var liftEff = function (dict) {
	      return dict.liftEff;
	  };
	  exports["MonadEff"] = MonadEff;
	  exports["liftEff"] = liftEff;;
	 
	})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Aff"];
	  var Data_Function = PS["Data.Function"];
	  var Prelude = PS["Prelude"];
	  var Data_Either = PS["Data.Either"];
	  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];
	  var Control_Plus = PS["Control.Plus"];
	  var runAff = function (ex) {
	      return function (f) {
	          return function (aff) {
	              return $foreign._runAff(ex, f, aff);
	          };
	      };
	  };
	  var launchAff = runAff(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
	  var functorAff = new Prelude.Functor(function (f) {
	      return function (fa) {
	          return $foreign._fmap(f, fa);
	      };
	  });
	  var applyAff = new Prelude.Apply(function () {
	      return functorAff;
	  }, function (ff) {
	      return function (fa) {
	          return $foreign._bind(alwaysCanceler, ff, function (f) {
	              return Prelude["<$>"](functorAff)(f)(fa);
	          });
	      };
	  });
	  var applicativeAff = new Prelude.Applicative(function () {
	      return applyAff;
	  }, function (v) {
	      return $foreign._pure(nonCanceler, v);
	  });
	  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
	  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
	  var later$prime = function (n) {
	      return function (aff) {
	          return $foreign._setTimeout(nonCanceler, n, aff);
	      };
	  };
	  var later = later$prime(0);                              
	  var bindAff = new Prelude.Bind(function () {
	      return applyAff;
	  }, function (fa) {
	      return function (f) {
	          return $foreign._bind(alwaysCanceler, fa, f);
	      };
	  });
	  var monadAff = new Prelude.Monad(function () {
	      return applicativeAff;
	  }, function () {
	      return bindAff;
	  });
	  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
	      return monadAff;
	  }, function (eff) {
	      return $foreign._liftEff(nonCanceler, eff);
	  });
	  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
	      return monadAff;
	  }, function (f) {
	      return function (a) {
	          var go = function (size) {
	              return function (f_1) {
	                  return function (a_1) {
	                      return Prelude.bind(bindAff)(f_1(a_1))(function (_64) {
	                          if (_64 instanceof Data_Either.Left) {
	                              if (size < 100) {
	                                  return go(size + 1 | 0)(f_1)(_64.value0);
	                              };
	                              if (Prelude.otherwise) {
	                                  return later(Control_Monad_Rec_Class.tailRecM(monadRecAff)(f_1)(_64.value0));
	                              };
	                          };
	                          if (_64 instanceof Data_Either.Right) {
	                              return Prelude.pure(applicativeAff)(_64.value0);
	                          };
	                          throw new Error("Failed pattern match: " + [ _64.constructor.name ]);
	                      });
	                  };
	              };
	          };
	          return go(0)(f)(a);
	      };
	  });
	  exports["runAff"] = runAff;
	  exports["nonCanceler"] = nonCanceler;
	  exports["launchAff"] = launchAff;
	  exports["later"] = later;
	  exports["functorAff"] = functorAff;
	  exports["applyAff"] = applyAff;
	  exports["applicativeAff"] = applicativeAff;
	  exports["bindAff"] = bindAff;
	  exports["monadAff"] = monadAff;
	  exports["monadEffAff"] = monadEffAff;
	  exports["monadRecAff"] = monadRecAff;;
	 
	})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Control.Monad.Aff.AVar

	  exports._makeVar = function (nonCanceler) {
	    return function(success, error) {
	      try {
	        success({
	          consumers: [],
	          producers: [],
	          error: undefined 
	        });
	      } catch (e) {
	        error(e);
	      }

	      return nonCanceler;
	    }
	  }

	  exports._takeVar = function (nonCanceler, avar) {
	    return function(success, error) {
	      if (avar.error !== undefined) {
	        error(avar.error);
	      } else if (avar.producers.length > 0) {
	        var producer = avar.producers.shift();

	        producer(success, error);
	      } else {
	        avar.consumers.push({success: success, error: error});
	      }

	      return nonCanceler;
	    } 
	  }

	  exports._putVar = function (nonCanceler, avar, a) {
	    return function(success, error) {
	      if (avar.error !== undefined) {
	        error(avar.error);
	      } else if (avar.consumers.length === 0) {
	        avar.producers.push(function(success, error) {
	          try {
	            success(a);
	          } catch (e) {
	            error(e);
	          }
	        });

	        success({});
	      } else {
	        var consumer = avar.consumers.shift();

	        try {
	          consumer.success(a);
	        } catch (e) {
	          error(e);

	          return;                  
	        }

	        success({});
	      }

	      return nonCanceler;
	    }
	  }
	 
	})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Aff.AVar"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var Prelude = PS["Prelude"];
	  var Data_Function = PS["Data.Function"];
	  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];     
	  var takeVar = function (q) {
	      return $foreign._takeVar(Control_Monad_Aff.nonCanceler, q);
	  };
	  var putVar = function (q) {
	      return function (a) {
	          return $foreign._putVar(Control_Monad_Aff.nonCanceler, q, a);
	      };
	  };
	  var makeVar = $foreign._makeVar(Control_Monad_Aff.nonCanceler);
	  exports["takeVar"] = takeVar;
	  exports["putVar"] = putVar;
	  exports["makeVar"] = makeVar;;
	 
	})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
	(function(exports) {
	  /* global exports, console */
	  "use strict";

	  // module Control.Monad.Eff.Console

	  exports.log = function (s) {
	    return function () {
	      console.log(s);
	      return {};
	    };
	  };
	 
	})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Eff.Console"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  exports["log"] = $foreign.log;;
	 
	})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var log = function (s) {
	      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.log(s)))(function () {
	          return Prelude["return"](Control_Monad_Aff.applicativeAff)(s);
	      });
	  };
	  exports["log"] = log;;
	 
	})(PS["Control.Monad.Aff.Console"] = PS["Control.Monad.Aff.Console"] || {});
	(function(exports) {
	  "use strict";

	  // module Unsafe.Coerce

	  exports.unsafeCoerce = function(x) { return x; }
	 
	})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Unsafe.Coerce"];
	  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
	 
	})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_Unfoldable = PS["Data.Unfoldable"];
	  var Prelude = PS["Prelude"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Control_Lazy = PS["Control.Lazy"];
	  var Control_Alt = PS["Control.Alt"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Control_Plus = PS["Control.Plus"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];     
	  var Nil = (function () {
	      function Nil() {

	      };
	      Nil.value = new Nil();
	      return Nil;
	  })();
	  var Cons = (function () {
	      function Cons(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Cons.create = function (value0) {
	          return function (value1) {
	              return new Cons(value0, value1);
	          };
	      };
	      return Cons;
	  })();
	  var reverse = (function () {
	      var go = function (__copy_acc) {
	          return function (__copy__789) {
	              var acc = __copy_acc;
	              var _789 = __copy__789;
	              tco: while (true) {
	                  var acc_1 = acc;
	                  if (_789 instanceof Nil) {
	                      return acc_1;
	                  };
	                  if (_789 instanceof Cons) {
	                      var __tco_acc = new Cons(_789.value0, acc);
	                      var __tco__789 = _789.value1;
	                      acc = __tco_acc;
	                      _789 = __tco__789;
	                      continue tco;
	                  };
	                  throw new Error("Failed pattern match at Data.List line 363, column 1 - line 364, column 1: " + [ acc.constructor.name, _789.constructor.name ]);
	              };
	          };
	      };
	      return go(Nil.value);
	  })();
	  exports["Nil"] = Nil;
	  exports["Cons"] = Cons;
	  exports["reverse"] = reverse;;
	 
	})(PS["Data.List"] = PS["Data.List"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_List = PS["Data.List"];
	  var Prelude = PS["Prelude"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Tuple = PS["Data.Tuple"];     
	  var CatQueue = (function () {
	      function CatQueue(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      CatQueue.create = function (value0) {
	          return function (value1) {
	              return new CatQueue(value0, value1);
	          };
	      };
	      return CatQueue;
	  })();
	  var uncons = function (__copy__819) {
	      var _819 = __copy__819;
	      tco: while (true) {
	          if (_819.value0 instanceof Data_List.Nil && _819.value1 instanceof Data_List.Nil) {
	              return Data_Maybe.Nothing.value;
	          };
	          if (_819.value0 instanceof Data_List.Nil) {
	              var __tco__819 = new CatQueue(Data_List.reverse(_819.value1), Data_List.Nil.value);
	              _819 = __tco__819;
	              continue tco;
	          };
	          if (_819.value0 instanceof Data_List.Cons) {
	              return new Data_Maybe.Just(new Data_Tuple.Tuple(_819.value0.value0, new CatQueue(_819.value0.value1, _819.value1)));
	          };
	          throw new Error("Failed pattern match: " + [ _819.constructor.name ]);
	      };
	  };
	  var snoc = function (_818) {
	      return function (a) {
	          return new CatQueue(_818.value0, new Data_List.Cons(a, _818.value1));
	      };
	  };
	  var $$null = function (_817) {
	      if (_817.value0 instanceof Data_List.Nil && _817.value1 instanceof Data_List.Nil) {
	          return true;
	      };
	      return false;
	  };
	  var empty = new CatQueue(Data_List.Nil.value, Data_List.Nil.value);
	  exports["CatQueue"] = CatQueue;
	  exports["uncons"] = uncons;
	  exports["snoc"] = snoc;
	  exports["null"] = $$null;
	  exports["empty"] = empty;;
	 
	})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_CatQueue = PS["Data.CatQueue"];
	  var Prelude = PS["Prelude"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_List = PS["Data.List"];     
	  var CatNil = (function () {
	      function CatNil() {

	      };
	      CatNil.value = new CatNil();
	      return CatNil;
	  })();
	  var CatCons = (function () {
	      function CatCons(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      CatCons.create = function (value0) {
	          return function (value1) {
	              return new CatCons(value0, value1);
	          };
	      };
	      return CatCons;
	  })();
	  var link = function (_825) {
	      return function (cat) {
	          if (_825 instanceof CatNil) {
	              return cat;
	          };
	          if (_825 instanceof CatCons) {
	              return new CatCons(_825.value0, Data_CatQueue.snoc(_825.value1)(cat));
	          };
	          throw new Error("Failed pattern match at Data.CatList line 88, column 1 - line 89, column 1: " + [ _825.constructor.name, cat.constructor.name ]);
	      };
	  };
	  var foldr = function (k) {
	      return function (b) {
	          return function (q) {
	              var foldl = function (__copy_k_1) {
	                  return function (__copy_b_1) {
	                      return function (__copy__826) {
	                          var k_1 = __copy_k_1;
	                          var b_1 = __copy_b_1;
	                          var _826 = __copy__826;
	                          tco: while (true) {
	                              var b_2 = b_1;
	                              if (_826 instanceof Data_List.Nil) {
	                                  return b_2;
	                              };
	                              if (_826 instanceof Data_List.Cons) {
	                                  var __tco_k_1 = k_1;
	                                  var __tco_b_1 = k_1(b_1)(_826.value0);
	                                  var __tco__826 = _826.value1;
	                                  k_1 = __tco_k_1;
	                                  b_1 = __tco_b_1;
	                                  _826 = __tco__826;
	                                  continue tco;
	                              };
	                              throw new Error("Failed pattern match at Data.CatList line 95, column 1 - line 96, column 1: " + [ k_1.constructor.name, b_1.constructor.name, _826.constructor.name ]);
	                          };
	                      };
	                  };
	              };
	              var go = function (__copy_xs) {
	                  return function (__copy_ys) {
	                      var xs = __copy_xs;
	                      var ys = __copy_ys;
	                      tco: while (true) {
	                          var _1161 = Data_CatQueue.uncons(xs);
	                          if (_1161 instanceof Data_Maybe.Nothing) {
	                              return foldl(function (x) {
	                                  return function (i) {
	                                      return i(x);
	                                  };
	                              })(b)(ys);
	                          };
	                          if (_1161 instanceof Data_Maybe.Just) {
	                              var __tco_ys = new Data_List.Cons(k(_1161.value0.value0), ys);
	                              xs = _1161.value0.value1;
	                              ys = __tco_ys;
	                              continue tco;
	                          };
	                          throw new Error("Failed pattern match at Data.CatList line 95, column 1 - line 96, column 1: " + [ _1161.constructor.name ]);
	                      };
	                  };
	              };
	              return go(q)(Data_List.Nil.value);
	          };
	      };
	  };
	  var uncons = function (_824) {
	      if (_824 instanceof CatNil) {
	          return Data_Maybe.Nothing.value;
	      };
	      if (_824 instanceof CatCons) {
	          return new Data_Maybe.Just(new Data_Tuple.Tuple(_824.value0, (function () {
	              var _1166 = Data_CatQueue["null"](_824.value1);
	              if (_1166) {
	                  return CatNil.value;
	              };
	              if (!_1166) {
	                  return foldr(link)(CatNil.value)(_824.value1);
	              };
	              throw new Error("Failed pattern match at Data.CatList line 79, column 1 - line 80, column 1: " + [ _1166.constructor.name ]);
	          })()));
	      };
	      throw new Error("Failed pattern match at Data.CatList line 79, column 1 - line 80, column 1: " + [ _824.constructor.name ]);
	  };
	  var empty = CatNil.value;
	  var append = function (_822) {
	      return function (_823) {
	          if (_823 instanceof CatNil) {
	              return _822;
	          };
	          if (_822 instanceof CatNil) {
	              return _823;
	          };
	          return link(_822)(_823);
	      };
	  };
	  var semigroupCatList = new Prelude.Semigroup(append);
	  var snoc = function (cat) {
	      return function (a) {
	          return append(cat)(new CatCons(a, Data_CatQueue.empty));
	      };
	  };
	  exports["CatNil"] = CatNil;
	  exports["CatCons"] = CatCons;
	  exports["uncons"] = uncons;
	  exports["snoc"] = snoc;
	  exports["append"] = append;
	  exports["empty"] = empty;
	  exports["semigroupCatList"] = semigroupCatList;;
	 
	})(PS["Data.CatList"] = PS["Data.CatList"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Either = PS["Data.Either"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Traversable = PS["Data.Traversable"];     
	  var Coproduct = function (x) {
	      return x;
	  };
	  var runCoproduct = function (_472) {
	      return _472;
	  };
	  var right = Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Right.create);
	  var left = Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(Data_Either.Left.create);
	  var coproduct = function (f) {
	      return function (g) {
	          return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.either(f)(g))(runCoproduct);
	      };
	  };
	  var functorCoproduct = function (__dict_Functor_3) {
	      return function (__dict_Functor_4) {
	          return new Prelude.Functor(function (f) {
	              return Prelude["<<<"](Prelude.semigroupoidFn)(Coproduct)(coproduct(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(Prelude["<$>"](__dict_Functor_3)(f)))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(Prelude["<$>"](__dict_Functor_4)(f))));
	          });
	      };
	  };
	  exports["Coproduct"] = Coproduct;
	  exports["coproduct"] = coproduct;
	  exports["right"] = right;
	  exports["left"] = left;
	  exports["runCoproduct"] = runCoproduct;
	  exports["functorCoproduct"] = functorCoproduct;;
	 
	})(PS["Data.Functor.Coproduct"] = PS["Data.Functor.Coproduct"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
	  var Data_Either = PS["Data.Either"];
	  var Data_Maybe = PS["Data.Maybe"];     
	  var Inject = function (inj, prj) {
	      this.inj = inj;
	      this.prj = prj;
	  };
	  var prj = function (dict) {
	      return dict.prj;
	  };
	  var injectReflexive = new Inject(Prelude.id(Prelude.categoryFn), Data_Maybe.Just.create);
	  var injectLeft = new Inject(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.Coproduct)(Data_Either.Left.create), Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value)));
	  var inj = function (dict) {
	      return dict.inj;
	  };
	  var injectRight = function (__dict_Inject_0) {
	      return new Inject(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.Coproduct)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Right.create)(inj(__dict_Inject_0))), Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(prj(__dict_Inject_0)));
	  };
	  exports["Inject"] = Inject;
	  exports["prj"] = prj;
	  exports["inj"] = inj;
	  exports["injectReflexive"] = injectReflexive;
	  exports["injectLeft"] = injectLeft;
	  exports["injectRight"] = injectRight;;
	 
	})(PS["Data.Inject"] = PS["Data.Inject"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Unsafe_Coerce = PS["Unsafe.Coerce"];
	  var Data_CatList = PS["Data.CatList"];
	  var Data_Either = PS["Data.Either"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Data_Inject = PS["Data.Inject"];
	  var Data_Identity = PS["Data.Identity"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Free = (function () {
	      function Free(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Free.create = function (value0) {
	          return function (value1) {
	              return new Free(value0, value1);
	          };
	      };
	      return Free;
	  })();
	  var Return = (function () {
	      function Return(value0) {
	          this.value0 = value0;
	      };
	      Return.create = function (value0) {
	          return new Return(value0);
	      };
	      return Return;
	  })();
	  var Bind = (function () {
	      function Bind(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Bind.create = function (value0) {
	          return function (value1) {
	              return new Bind(value0, value1);
	          };
	      };
	      return Bind;
	  })();
	  var toView = function (__copy__828) {
	      var _828 = __copy__828;
	      tco: while (true) {
	          var runExpF = function (_831) {
	              return _831;
	          };
	          var concatF = function (_830) {
	              return function (r) {
	                  return new Free(_830.value0, Prelude["<>"](Data_CatList.semigroupCatList)(_830.value1)(r));
	              };
	          };
	          if (_828.value0 instanceof Return) {
	              var _1156 = Data_CatList.uncons(_828.value1);
	              if (_1156 instanceof Data_Maybe.Nothing) {
	                  return new Return(Unsafe_Coerce.unsafeCoerce(_828.value0.value0));
	              };
	              if (_1156 instanceof Data_Maybe.Just) {
	                  var __tco__828 = Unsafe_Coerce.unsafeCoerce(concatF(runExpF(_1156.value0.value0)(_828.value0.value0))(_1156.value0.value1));
	                  _828 = __tco__828;
	                  continue tco;
	              };
	              throw new Error("Failed pattern match: " + [ _1156.constructor.name ]);
	          };
	          if (_828.value0 instanceof Bind) {
	              return new Bind(_828.value0.value0, function (a) {
	                  return Unsafe_Coerce.unsafeCoerce(concatF(_828.value0.value1(a))(_828.value1));
	              });
	          };
	          throw new Error("Failed pattern match: " + [ _828.value0.constructor.name ]);
	      };
	  };
	  var runFreeM = function (__dict_Functor_0) {
	      return function (__dict_MonadRec_1) {
	          return function (k) {
	              var go = function (f) {
	                  var _1165 = toView(f);
	                  if (_1165 instanceof Return) {
	                      return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(Prelude.pure((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())(_1165.value0));
	                  };
	                  if (_1165 instanceof Bind) {
	                      return Prelude["<$>"]((((__dict_MonadRec_1["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(k(Prelude["<$>"](__dict_Functor_0)(_1165.value1)(_1165.value0)));
	                  };
	                  throw new Error("Failed pattern match at Control.Monad.Free line 123, column 3 - line 124, column 3: " + [ _1165.constructor.name ]);
	              };
	              return Control_Monad_Rec_Class.tailRecM(__dict_MonadRec_1)(go);
	          };
	      };
	  };
	  var fromView = function (f) {
	      return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
	  };
	  var freeMonad = new Prelude.Monad(function () {
	      return freeApplicative;
	  }, function () {
	      return freeBind;
	  });
	  var freeFunctor = new Prelude.Functor(function (k) {
	      return function (f) {
	          return Prelude[">>="](freeBind)(f)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](freeApplicative))(k));
	      };
	  });
	  var freeBind = new Prelude.Bind(function () {
	      return freeApply;
	  }, function (_829) {
	      return function (k) {
	          return new Free(_829.value0, Data_CatList.snoc(_829.value1)(Unsafe_Coerce.unsafeCoerce(k)));
	      };
	  });
	  var freeApply = new Prelude.Apply(function () {
	      return freeFunctor;
	  }, Prelude.ap(freeMonad));
	  var freeApplicative = new Prelude.Applicative(function () {
	      return freeApply;
	  }, Prelude["<<<"](Prelude.semigroupoidFn)(fromView)(Return.create));
	  var liftF = function (f) {
	      return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(freeApplicative))(Unsafe_Coerce.unsafeCoerce)));
	  }; 
	  var liftFI = function (__dict_Inject_3) {
	      return function (fa) {
	          return liftF(Data_Inject.inj(__dict_Inject_3)(fa));
	      };
	  };
	  exports["runFreeM"] = runFreeM;
	  exports["liftFI"] = liftFI;
	  exports["liftF"] = liftF;
	  exports["freeFunctor"] = freeFunctor;
	  exports["freeBind"] = freeBind;
	  exports["freeApplicative"] = freeApplicative;
	  exports["freeApply"] = freeApply;
	  exports["freeMonad"] = freeMonad;;
	 
	})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Plus = PS["Control.Plus"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_Lazy = PS["Control.Lazy"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];
	  var Data_Either = PS["Data.Either"];     
	  var StateT = function (x) {
	      return x;
	  };
	  var runStateT = function (_637) {
	      return _637;
	  };
	  var monadStateT = function (__dict_Monad_3) {
	      return new Prelude.Monad(function () {
	          return applicativeStateT(__dict_Monad_3);
	      }, function () {
	          return bindStateT(__dict_Monad_3);
	      });
	  };
	  var functorStateT = function (__dict_Monad_10) {
	      return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_10)));
	  };
	  var bindStateT = function (__dict_Monad_13) {
	      return new Prelude.Bind(function () {
	          return applyStateT(__dict_Monad_13);
	      }, function (_638) {
	          return function (f) {
	              return function (s) {
	                  return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(_638(s))(function (_53) {
	                      return runStateT(f(_53.value0))(_53.value1);
	                  });
	              };
	          };
	      });
	  };
	  var applyStateT = function (__dict_Monad_14) {
	      return new Prelude.Apply(function () {
	          return functorStateT(__dict_Monad_14);
	      }, Prelude.ap(monadStateT(__dict_Monad_14)));
	  };
	  var applicativeStateT = function (__dict_Monad_15) {
	      return new Prelude.Applicative(function () {
	          return applyStateT(__dict_Monad_15);
	      }, function (a) {
	          return StateT(function (s) {
	              return Prelude["return"](__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
	          });
	      });
	  };
	  exports["StateT"] = StateT;
	  exports["runStateT"] = runStateT;
	  exports["functorStateT"] = functorStateT;
	  exports["applyStateT"] = applyStateT;
	  exports["applicativeStateT"] = applicativeStateT;
	  exports["bindStateT"] = bindStateT;
	  exports["monadStateT"] = monadStateT;;
	 
	})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Identity = PS["Data.Identity"];
	  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
	  var Data_Tuple = PS["Data.Tuple"];                   
	  var runState = function (s) {
	      return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
	  };
	  exports["runState"] = runState;;
	 
	})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Plus = PS["Control.Plus"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];
	  var Data_Either = PS["Data.Either"];     
	  var WriterT = function (x) {
	      return x;
	  };
	  var runWriterT = function (_641) {
	      return _641;
	  };
	  var mapWriterT = function (f) {
	      return function (m) {
	          return WriterT(f(runWriterT(m)));
	      };
	  };
	  var functorWriterT = function (__dict_Functor_14) {
	      return new Prelude.Functor(function (f) {
	          return mapWriterT(Prelude["<$>"](__dict_Functor_14)(function (_640) {
	              return new Data_Tuple.Tuple(f(_640.value0), _640.value1);
	          }));
	      });
	  };
	  var applyWriterT = function (__dict_Monoid_18) {
	      return function (__dict_Apply_19) {
	          return new Prelude.Apply(function () {
	              return functorWriterT(__dict_Apply_19["__superclass_Prelude.Functor_0"]());
	          }, function (f) {
	              return function (v) {
	                  return WriterT((function () {
	                      var k = function (_642) {
	                          return function (_643) {
	                              return new Data_Tuple.Tuple(_642.value0(_643.value0), Prelude["<>"](__dict_Monoid_18["__superclass_Prelude.Semigroup_0"]())(_642.value1)(_643.value1));
	                          };
	                      };
	                      return Prelude["<*>"](__dict_Apply_19)(Prelude["<$>"](__dict_Apply_19["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
	                  })());
	              };
	          });
	      };
	  };
	  var applicativeWriterT = function (__dict_Monoid_20) {
	      return function (__dict_Applicative_21) {
	          return new Prelude.Applicative(function () {
	              return applyWriterT(__dict_Monoid_20)(__dict_Applicative_21["__superclass_Prelude.Apply_0"]());
	          }, function (a) {
	              return WriterT(Prelude.pure(__dict_Applicative_21)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_20))));
	          });
	      };
	  };
	  exports["WriterT"] = WriterT;
	  exports["mapWriterT"] = mapWriterT;
	  exports["runWriterT"] = runWriterT;
	  exports["functorWriterT"] = functorWriterT;
	  exports["applyWriterT"] = applyWriterT;
	  exports["applicativeWriterT"] = applicativeWriterT;;
	 
	})(PS["Control.Monad.Writer.Trans"] = PS["Control.Monad.Writer.Trans"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Control_Monad_RWS = PS["Control.Monad.RWS"];
	  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
	  var Control_Monad_Error = PS["Control.Monad.Error"];
	  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
	  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
	  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
	  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
	  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Tuple = PS["Data.Tuple"];     
	  var MonadState = function (state) {
	      this.state = state;
	  };
	  var state = function (dict) {
	      return dict.state;
	  };
	  var put = function (__dict_Monad_0) {
	      return function (__dict_MonadState_1) {
	          return function (s) {
	              return state(__dict_MonadState_1)(function (_658) {
	                  return new Data_Tuple.Tuple(Prelude.unit, s);
	              });
	          };
	      };
	  };
	  var monadStateStateT = function (__dict_Monad_7) {
	      return new MonadState(function (f) {
	          return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]()))(f));
	      });
	  };
	  var modify = function (__dict_Monad_16) {
	      return function (__dict_MonadState_17) {
	          return function (f) {
	              return state(__dict_MonadState_17)(function (s) {
	                  return new Data_Tuple.Tuple(Prelude.unit, f(s));
	              });
	          };
	      };
	  };
	  var gets = function (__dict_Monad_18) {
	      return function (__dict_MonadState_19) {
	          return function (f) {
	              return state(__dict_MonadState_19)(function (s) {
	                  return new Data_Tuple.Tuple(f(s), s);
	              });
	          };
	      };
	  };
	  var get = function (__dict_Monad_20) {
	      return function (__dict_MonadState_21) {
	          return state(__dict_MonadState_21)(function (s) {
	              return new Data_Tuple.Tuple(s, s);
	          });
	      };
	  };
	  exports["MonadState"] = MonadState;
	  exports["modify"] = modify;
	  exports["put"] = put;
	  exports["gets"] = gets;
	  exports["get"] = get;
	  exports["state"] = state;
	  exports["monadStateStateT"] = monadStateStateT;;
	 
	})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Identity = PS["Data.Identity"];
	  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Monoid = PS["Data.Monoid"];     
	  var runWriter = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
	  exports["runWriter"] = runWriter;;
	 
	})(PS["Control.Monad.Writer"] = PS["Control.Monad.Writer"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module DOM.Event.EventTarget

	  exports.eventListener = function (fn) {
	    return function (event) {
	      return fn(event)();
	    };
	  };

	  exports.addEventListener = function (type) {
	    return function (listener) {
	      return function (useCapture) {
	        return function (target) {
	          return function () {
	            target.addEventListener(type, listener, useCapture);
	            return {};
	          };
	        };
	      };
	    };
	  };
	 
	})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.Event.EventTarget"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
	  var DOM = PS["DOM"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  exports["addEventListener"] = $foreign.addEventListener;
	  exports["eventListener"] = $foreign.eventListener;;
	 
	})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  var load = "load";
	  exports["load"] = load;;
	 
	})(PS["DOM.Event.EventTypes"] = PS["DOM.Event.EventTypes"] || {});
	(function(exports) {
	  /* global exports, window */
	  "use strict";

	  // module DOM.HTML

	  exports.window = function () {
	    return window;
	  };
	 
	})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Unsafe_Coerce = PS["Unsafe.Coerce"];
	  var Prelude = PS["Prelude"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];     
	  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;                  
	  var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;
	  exports["htmlElementToNode"] = htmlElementToNode;
	  exports["windowToEventTarget"] = windowToEventTarget;;
	 
	})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.HTML"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  exports["window"] = $foreign.window;;
	 
	})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module DOM.HTML.Document

	  exports.body = function (doc) {
	    return function () {
	      return doc.body;
	    };
	  };
	 
	})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Data.Nullable

	  exports["null"] = null;

	  exports.nullable = function(a, r, f) {
	      return a == null ? r : f(a);
	  };

	  exports.notNull = function(x) {
	      return x;
	  }; 
	 
	})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Nullable"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Function = PS["Data.Function"];
	  var Prelude = PS["Prelude"];     
	  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
	  var toMaybe = function (n) {
	      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
	  };
	  exports["toNullable"] = toNullable;
	  exports["toMaybe"] = toMaybe;;
	 
	})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.HTML.Document"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  exports["body"] = $foreign.body;;
	 
	})(PS["DOM.HTML.Document"] = PS["DOM.HTML.Document"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module DOM.HTML.Window

	  exports.document = function (window) {
	    return function () {
	      return window.document;
	    };
	  };
	 
	})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.HTML.Window"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  exports["document"] = $foreign.document;;
	 
	})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.appendChild = function (node) {
	    return function (parent) {
	      return function () {
	        return parent.appendChild(node);
	      };
	    };
	  };
	 
	})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.Node.Node"];
	  var Prelude = PS["Prelude"];
	  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
	  var Data_Enum = PS["Data.Enum"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var DOM = PS["DOM"];
	  var DOM_Node_NodeType = PS["DOM.Node.NodeType"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];
	  exports["appendChild"] = $foreign.appendChild;;
	 
	})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Unsafe_Coerce = PS["Unsafe.Coerce"];     
	  var runExistsR = Unsafe_Coerce.unsafeCoerce;
	  var mkExistsR = Unsafe_Coerce.unsafeCoerce;
	  exports["runExistsR"] = runExistsR;
	  exports["mkExistsR"] = mkExistsR;;
	 
	})(PS["Data.ExistsR"] = PS["Data.ExistsR"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_List = PS["Data.List"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Monoid = PS["Data.Monoid"];     
	  var Leaf = (function () {
	      function Leaf() {

	      };
	      Leaf.value = new Leaf();
	      return Leaf;
	  })();
	  var Two = (function () {
	      function Two(value0, value1, value2, value3) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	      };
	      Two.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return new Two(value0, value1, value2, value3);
	                  };
	              };
	          };
	      };
	      return Two;
	  })();
	  var Three = (function () {
	      function Three(value0, value1, value2, value3, value4, value5, value6) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	          this.value4 = value4;
	          this.value5 = value5;
	          this.value6 = value6;
	      };
	      Three.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return function (value4) {
	                          return function (value5) {
	                              return function (value6) {
	                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
	                              };
	                          };
	                      };
	                  };
	              };
	          };
	      };
	      return Three;
	  })();
	  var TwoLeft = (function () {
	      function TwoLeft(value0, value1, value2) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	      };
	      TwoLeft.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return new TwoLeft(value0, value1, value2);
	              };
	          };
	      };
	      return TwoLeft;
	  })();
	  var TwoRight = (function () {
	      function TwoRight(value0, value1, value2) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	      };
	      TwoRight.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return new TwoRight(value0, value1, value2);
	              };
	          };
	      };
	      return TwoRight;
	  })();
	  var ThreeLeft = (function () {
	      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	          this.value4 = value4;
	          this.value5 = value5;
	      };
	      ThreeLeft.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return function (value4) {
	                          return function (value5) {
	                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
	                          };
	                      };
	                  };
	              };
	          };
	      };
	      return ThreeLeft;
	  })();
	  var ThreeMiddle = (function () {
	      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	          this.value4 = value4;
	          this.value5 = value5;
	      };
	      ThreeMiddle.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return function (value4) {
	                          return function (value5) {
	                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
	                          };
	                      };
	                  };
	              };
	          };
	      };
	      return ThreeMiddle;
	  })();
	  var ThreeRight = (function () {
	      function ThreeRight(value0, value1, value2, value3, value4, value5) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	          this.value4 = value4;
	          this.value5 = value5;
	      };
	      ThreeRight.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return function (value4) {
	                          return function (value5) {
	                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
	                          };
	                      };
	                  };
	              };
	          };
	      };
	      return ThreeRight;
	  })();
	  var KickUp = (function () {
	      function KickUp(value0, value1, value2, value3) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	      };
	      KickUp.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return new KickUp(value0, value1, value2, value3);
	                  };
	              };
	          };
	      };
	      return KickUp;
	  })();
	  var lookup = function (__copy___dict_Ord_6) {
	      return function (__copy_k) {
	          return function (__copy__849) {
	              var __dict_Ord_6 = __copy___dict_Ord_6;
	              var k = __copy_k;
	              var _849 = __copy__849;
	              tco: while (true) {
	                  if (_849 instanceof Leaf) {
	                      return Data_Maybe.Nothing.value;
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_849.value1)) {
	                      return new Data_Maybe.Just(_849.value2);
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Two && Prelude["<"](__dict_Ord_6)(k_1)(_849.value1)) {
	                      var __tco___dict_Ord_6 = __dict_Ord_6;
	                      var __tco__849 = _849.value0;
	                      __dict_Ord_6 = __tco___dict_Ord_6;
	                      k = k_1;
	                      _849 = __tco__849;
	                      continue tco;
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Two) {
	                      var __tco___dict_Ord_6 = __dict_Ord_6;
	                      var __tco__849 = _849.value3;
	                      __dict_Ord_6 = __tco___dict_Ord_6;
	                      k = k_1;
	                      _849 = __tco__849;
	                      continue tco;
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_849.value1)) {
	                      return new Data_Maybe.Just(_849.value2);
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_849.value4)) {
	                      return new Data_Maybe.Just(_849.value5);
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Three && Prelude["<"](__dict_Ord_6)(k_1)(_849.value1)) {
	                      var __tco___dict_Ord_6 = __dict_Ord_6;
	                      var __tco__849 = _849.value0;
	                      __dict_Ord_6 = __tco___dict_Ord_6;
	                      k = k_1;
	                      _849 = __tco__849;
	                      continue tco;
	                  };
	                  var k_1 = k;
	                  if (_849 instanceof Three && (Prelude["<"](__dict_Ord_6)(_849.value1)(k_1) && Prelude["<="](__dict_Ord_6)(k_1)(_849.value4))) {
	                      var __tco___dict_Ord_6 = __dict_Ord_6;
	                      var __tco__849 = _849.value3;
	                      __dict_Ord_6 = __tco___dict_Ord_6;
	                      k = k_1;
	                      _849 = __tco__849;
	                      continue tco;
	                  };
	                  if (_849 instanceof Three) {
	                      var __tco___dict_Ord_6 = __dict_Ord_6;
	                      var __tco_k = k;
	                      var __tco__849 = _849.value6;
	                      __dict_Ord_6 = __tco___dict_Ord_6;
	                      k = __tco_k;
	                      _849 = __tco__849;
	                      continue tco;
	                  };
	                  throw new Error("Failed pattern match: " + [ k.constructor.name, _849.constructor.name ]);
	              };
	          };
	      };
	  }; 
	  var fromZipper = function (__copy___dict_Ord_8) {
	      return function (__copy__850) {
	          return function (__copy__851) {
	              var __dict_Ord_8 = __copy___dict_Ord_8;
	              var _850 = __copy__850;
	              var _851 = __copy__851;
	              tco: while (true) {
	                  if (_850 instanceof Data_List.Nil) {
	                      return _851;
	                  };
	                  if (_850 instanceof Data_List.Cons && _850.value0 instanceof TwoLeft) {
	                      var __tco___dict_Ord_8 = __dict_Ord_8;
	                      var __tco__850 = _850.value1;
	                      var __tco__851 = new Two(_851, _850.value0.value0, _850.value0.value1, _850.value0.value2);
	                      __dict_Ord_8 = __tco___dict_Ord_8;
	                      _850 = __tco__850;
	                      _851 = __tco__851;
	                      continue tco;
	                  };
	                  if (_850 instanceof Data_List.Cons && _850.value0 instanceof TwoRight) {
	                      var __tco___dict_Ord_8 = __dict_Ord_8;
	                      var __tco__850 = _850.value1;
	                      var __tco__851 = new Two(_850.value0.value0, _850.value0.value1, _850.value0.value2, _851);
	                      __dict_Ord_8 = __tco___dict_Ord_8;
	                      _850 = __tco__850;
	                      _851 = __tco__851;
	                      continue tco;
	                  };
	                  if (_850 instanceof Data_List.Cons && _850.value0 instanceof ThreeLeft) {
	                      var __tco___dict_Ord_8 = __dict_Ord_8;
	                      var __tco__850 = _850.value1;
	                      var __tco__851 = new Three(_851, _850.value0.value0, _850.value0.value1, _850.value0.value2, _850.value0.value3, _850.value0.value4, _850.value0.value5);
	                      __dict_Ord_8 = __tco___dict_Ord_8;
	                      _850 = __tco__850;
	                      _851 = __tco__851;
	                      continue tco;
	                  };
	                  if (_850 instanceof Data_List.Cons && _850.value0 instanceof ThreeMiddle) {
	                      var __tco___dict_Ord_8 = __dict_Ord_8;
	                      var __tco__850 = _850.value1;
	                      var __tco__851 = new Three(_850.value0.value0, _850.value0.value1, _850.value0.value2, _851, _850.value0.value3, _850.value0.value4, _850.value0.value5);
	                      __dict_Ord_8 = __tco___dict_Ord_8;
	                      _850 = __tco__850;
	                      _851 = __tco__851;
	                      continue tco;
	                  };
	                  if (_850 instanceof Data_List.Cons && _850.value0 instanceof ThreeRight) {
	                      var __tco___dict_Ord_8 = __dict_Ord_8;
	                      var __tco__850 = _850.value1;
	                      var __tco__851 = new Three(_850.value0.value0, _850.value0.value1, _850.value0.value2, _850.value0.value3, _850.value0.value4, _850.value0.value5, _851);
	                      __dict_Ord_8 = __tco___dict_Ord_8;
	                      _850 = __tco__850;
	                      _851 = __tco__851;
	                      continue tco;
	                  };
	                  throw new Error("Failed pattern match: " + [ _850.constructor.name, _851.constructor.name ]);
	              };
	          };
	      };
	  };
	  var insert = function (__dict_Ord_9) {
	      var up = function (__copy___dict_Ord_10) {
	          return function (__copy__858) {
	              return function (__copy__859) {
	                  var __dict_Ord_10 = __copy___dict_Ord_10;
	                  var _858 = __copy__858;
	                  var _859 = __copy__859;
	                  tco: while (true) {
	                      if (_858 instanceof Data_List.Nil) {
	                          return new Two(_859.value0, _859.value1, _859.value2, _859.value3);
	                      };
	                      if (_858 instanceof Data_List.Cons && _858.value0 instanceof TwoLeft) {
	                          return fromZipper(__dict_Ord_10)(_858.value1)(new Three(_859.value0, _859.value1, _859.value2, _859.value3, _858.value0.value0, _858.value0.value1, _858.value0.value2));
	                      };
	                      if (_858 instanceof Data_List.Cons && _858.value0 instanceof TwoRight) {
	                          return fromZipper(__dict_Ord_10)(_858.value1)(new Three(_858.value0.value0, _858.value0.value1, _858.value0.value2, _859.value0, _859.value1, _859.value2, _859.value3));
	                      };
	                      if (_858 instanceof Data_List.Cons && _858.value0 instanceof ThreeLeft) {
	                          var __tco___dict_Ord_10 = __dict_Ord_10;
	                          var __tco__858 = _858.value1;
	                          var __tco__859 = new KickUp(new Two(_859.value0, _859.value1, _859.value2, _859.value3), _858.value0.value0, _858.value0.value1, new Two(_858.value0.value2, _858.value0.value3, _858.value0.value4, _858.value0.value5));
	                          __dict_Ord_10 = __tco___dict_Ord_10;
	                          _858 = __tco__858;
	                          _859 = __tco__859;
	                          continue tco;
	                      };
	                      if (_858 instanceof Data_List.Cons && _858.value0 instanceof ThreeMiddle) {
	                          var __tco___dict_Ord_10 = __dict_Ord_10;
	                          var __tco__858 = _858.value1;
	                          var __tco__859 = new KickUp(new Two(_858.value0.value0, _858.value0.value1, _858.value0.value2, _859.value0), _859.value1, _859.value2, new Two(_859.value3, _858.value0.value3, _858.value0.value4, _858.value0.value5));
	                          __dict_Ord_10 = __tco___dict_Ord_10;
	                          _858 = __tco__858;
	                          _859 = __tco__859;
	                          continue tco;
	                      };
	                      if (_858 instanceof Data_List.Cons && _858.value0 instanceof ThreeRight) {
	                          var __tco___dict_Ord_10 = __dict_Ord_10;
	                          var __tco__858 = _858.value1;
	                          var __tco__859 = new KickUp(new Two(_858.value0.value0, _858.value0.value1, _858.value0.value2, _858.value0.value3), _858.value0.value4, _858.value0.value5, new Two(_859.value0, _859.value1, _859.value2, _859.value3));
	                          __dict_Ord_10 = __tco___dict_Ord_10;
	                          _858 = __tco__858;
	                          _859 = __tco__859;
	                          continue tco;
	                      };
	                      throw new Error("Failed pattern match at Data.Map line 147, column 1 - line 148, column 1: " + [ _858.constructor.name, _859.constructor.name ]);
	                  };
	              };
	          };
	      };
	      var down = function (__copy___dict_Ord_11) {
	          return function (__copy_ctx) {
	              return function (__copy_k) {
	                  return function (__copy_v) {
	                      return function (__copy__857) {
	                          var __dict_Ord_11 = __copy___dict_Ord_11;
	                          var ctx = __copy_ctx;
	                          var k = __copy_k;
	                          var v = __copy_v;
	                          var _857 = __copy__857;
	                          tco: while (true) {
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Leaf) {
	                                  return up(__dict_Ord_11)(ctx_1)(new KickUp(Leaf.value, k_1, v_1, Leaf.value));
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Two && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_857.value1)) {
	                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Two(_857.value0, k_1, v_1, _857.value3));
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Two && Prelude["<"](__dict_Ord_11)(k_1)(_857.value1)) {
	                                  var __tco___dict_Ord_11 = __dict_Ord_11;
	                                  var __tco_ctx = new Data_List.Cons(new TwoLeft(_857.value1, _857.value2, _857.value3), ctx_1);
	                                  var __tco__857 = _857.value0;
	                                  __dict_Ord_11 = __tco___dict_Ord_11;
	                                  ctx = __tco_ctx;
	                                  k = k_1;
	                                  v = v_1;
	                                  _857 = __tco__857;
	                                  continue tco;
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Two) {
	                                  var __tco___dict_Ord_11 = __dict_Ord_11;
	                                  var __tco_ctx = new Data_List.Cons(new TwoRight(_857.value0, _857.value1, _857.value2), ctx_1);
	                                  var __tco__857 = _857.value3;
	                                  __dict_Ord_11 = __tco___dict_Ord_11;
	                                  ctx = __tco_ctx;
	                                  k = k_1;
	                                  v = v_1;
	                                  _857 = __tco__857;
	                                  continue tco;
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_857.value1)) {
	                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_857.value0, k_1, v_1, _857.value3, _857.value4, _857.value5, _857.value6));
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Three && Prelude["=="](__dict_Ord_11["__superclass_Prelude.Eq_0"]())(k_1)(_857.value4)) {
	                                  return fromZipper(__dict_Ord_11)(ctx_1)(new Three(_857.value0, _857.value1, _857.value2, _857.value3, k_1, v_1, _857.value6));
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Three && Prelude["<"](__dict_Ord_11)(k_1)(_857.value1)) {
	                                  var __tco___dict_Ord_11 = __dict_Ord_11;
	                                  var __tco_ctx = new Data_List.Cons(new ThreeLeft(_857.value1, _857.value2, _857.value3, _857.value4, _857.value5, _857.value6), ctx_1);
	                                  var __tco__857 = _857.value0;
	                                  __dict_Ord_11 = __tco___dict_Ord_11;
	                                  ctx = __tco_ctx;
	                                  k = k_1;
	                                  v = v_1;
	                                  _857 = __tco__857;
	                                  continue tco;
	                              };
	                              var ctx_1 = ctx;
	                              var k_1 = k;
	                              var v_1 = v;
	                              if (_857 instanceof Three && (Prelude["<"](__dict_Ord_11)(_857.value1)(k_1) && Prelude["<="](__dict_Ord_11)(k_1)(_857.value4))) {
	                                  var __tco___dict_Ord_11 = __dict_Ord_11;
	                                  var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_857.value0, _857.value1, _857.value2, _857.value4, _857.value5, _857.value6), ctx_1);
	                                  var __tco__857 = _857.value3;
	                                  __dict_Ord_11 = __tco___dict_Ord_11;
	                                  ctx = __tco_ctx;
	                                  k = k_1;
	                                  v = v_1;
	                                  _857 = __tco__857;
	                                  continue tco;
	                              };
	                              if (_857 instanceof Three) {
	                                  var __tco___dict_Ord_11 = __dict_Ord_11;
	                                  var __tco_ctx = new Data_List.Cons(new ThreeRight(_857.value0, _857.value1, _857.value2, _857.value3, _857.value4, _857.value5), ctx);
	                                  var __tco_k = k;
	                                  var __tco_v = v;
	                                  var __tco__857 = _857.value6;
	                                  __dict_Ord_11 = __tco___dict_Ord_11;
	                                  ctx = __tco_ctx;
	                                  k = __tco_k;
	                                  v = __tco_v;
	                                  _857 = __tco__857;
	                                  continue tco;
	                              };
	                              throw new Error("Failed pattern match at Data.Map line 147, column 1 - line 148, column 1: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, _857.constructor.name ]);
	                          };
	                      };
	                  };
	              };
	          };
	      };
	      return down(__dict_Ord_9)(Data_List.Nil.value);
	  };
	  var empty = Leaf.value;
	  exports["lookup"] = lookup;
	  exports["insert"] = insert;
	  exports["empty"] = empty;;
	 
	})(PS["Data.Map"] = PS["Data.Map"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports._copyEff = function (m) {
	    return function () {
	      var r = {};
	      for (var k in m) {
	        if (m.hasOwnProperty(k)) {
	          r[k] = m[k];
	        }
	      }
	      return r;
	    };
	  };

	  exports.empty = {};

	  exports.runST = function (f) {
	    return f;
	  };

	  // jshint maxparams: 1
	  exports._foldM = function (bind) {
	    return function (f) {
	      return function (mz) {
	        return function (m) {
	          function g (k) {
	            return function (z) {
	              return f(z)(k)(m[k]);
	            };
	          }
	          for (var k in m) {
	            if (m.hasOwnProperty(k)) {
	              mz = bind(mz)(g(k));
	            }
	          }
	          return mz;
	        };
	      };
	    };
	  };

	  // jshint maxparams: 4
	  exports._lookup = function (no, yes, k, m) {
	    return k in m ? yes(m[k]) : no;
	  };

	  function _collect (f) {
	    return function (m) {
	      var r = [];
	      for (var k in m) {
	        if (m.hasOwnProperty(k)) {
	          r.push(f(k)(m[k]));
	        }
	      }
	      return r;
	    };
	  }  
	 
	})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.poke = function (m) {
	    return function (k) {
	      return function (v) {
	        return function () {
	          m[k] = v;
	          return m;
	        };
	      };
	    };
	  };
	 
	})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.StrMap.ST"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_ST = PS["Control.Monad.ST"];
	  exports["poke"] = $foreign.poke;;
	 
	})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.StrMap"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Prelude = PS["Prelude"];
	  var Data_Function = PS["Data.Function"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_StrMap_ST = PS["Data.StrMap.ST"];
	  var Data_List = PS["Data.List"];
	  var Control_Monad_ST = PS["Control.Monad.ST"];                                                                                                 
	  var thawST = $foreign._copyEff;
	  var pureST = function (f) {
	      return Control_Monad_Eff.runPure($foreign.runST(f));
	  };
	  var mutate = function (f) {
	      return function (m) {
	          return pureST(function __do() {
	              var _91 = thawST(m)();
	              f(_91)();
	              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_91)();
	          });
	      };
	  };                                                                                 
	  var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
	  var insert = function (k) {
	      return function (v) {
	          return mutate(function (s) {
	              return Data_StrMap_ST.poke(s)(k)(v);
	          });
	      };
	  };
	  var foldM = function (__dict_Monad_3) {
	      return function (f) {
	          return function (z) {
	              return $foreign._foldM(Prelude[">>="](__dict_Monad_3["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_3["__superclass_Prelude.Applicative_0"]())(z));
	          };
	      };
	  };
	  var semigroupStrMap = function (__dict_Semigroup_4) {
	      return new Prelude.Semigroup(function (m1) {
	          return function (m2) {
	              return mutate(function (s1) {
	                  return foldM(Control_Monad_Eff.monadEff)(function (s2) {
	                      return function (k) {
	                          return function (v2) {
	                              return Data_StrMap_ST.poke(s2)(k)($foreign._lookup(v2, function (v1) {
	                                  return Prelude["<>"](__dict_Semigroup_4)(v1)(v2);
	                              }, k, m2));
	                          };
	                      };
	                  })(s1)(m1);
	              })(m2);
	          };
	      });
	  };
	  var monoidStrMap = function (__dict_Semigroup_1) {
	      return new Data_Monoid.Monoid(function () {
	          return semigroupStrMap(__dict_Semigroup_1);
	      }, $foreign.empty);
	  };
	  exports["thawST"] = thawST;
	  exports["foldM"] = foldM;
	  exports["lookup"] = lookup;
	  exports["insert"] = insert;
	  exports["semigroupStrMap"] = semigroupStrMap;
	  exports["monoidStrMap"] = monoidStrMap;;
	 
	})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
	  var Data_Functor = PS["Data.Functor"];
	  var Control_Monad_State = PS["Control.Monad.State"];
	  var Data_Inject = PS["Data.Inject"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];     
	  var Get = (function () {
	      function Get(value0) {
	          this.value0 = value0;
	      };
	      Get.create = function (value0) {
	          return new Get(value0);
	      };
	      return Get;
	  })();
	  var Modify = (function () {
	      function Modify(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Modify.create = function (value0) {
	          return function (value1) {
	              return new Modify(value0, value1);
	          };
	      };
	      return Modify;
	  })();
	  var stateN = function (__dict_Monad_0) {
	      return function (__dict_MonadState_1) {
	          return function (_835) {
	              if (_835 instanceof Get) {
	                  return Prelude[">>="](__dict_Monad_0["__superclass_Prelude.Bind_1"]())(Control_Monad_State_Class.get(__dict_Monad_0)(__dict_MonadState_1))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.pure(__dict_Monad_0["__superclass_Prelude.Applicative_0"]()))(_835.value0));
	              };
	              if (_835 instanceof Modify) {
	                  return Data_Functor["$>"](((__dict_Monad_0["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Monad_State_Class.modify(__dict_Monad_0)(__dict_MonadState_1)(_835.value0))(_835.value1);
	              };
	              throw new Error("Failed pattern match at Halogen.Query.StateF line 86, column 1 - line 87, column 1: " + [ _835.constructor.name ]);
	          };
	      };
	  };
	  var modify = function (__dict_Inject_2) {
	      return function (f) {
	          return Control_Monad_Free.liftFI(__dict_Inject_2)(new Modify(f, Prelude.unit));
	      };
	  };
	  var gets = function (__dict_Inject_3) {
	      return function (f) {
	          return Control_Monad_Free.liftFI(__dict_Inject_3)(new Get(f));
	      };
	  };
	  var get = function (__dict_Inject_4) {
	      return gets(__dict_Inject_4)(Prelude.id(Prelude.categoryFn));
	  };
	  var functorStateF = new Prelude.Functor(function (f) {
	      return function (_836) {
	          if (_836 instanceof Get) {
	              return new Get(Prelude["<<<"](Prelude.semigroupoidFn)(f)(_836.value0));
	          };
	          if (_836 instanceof Modify) {
	              return new Modify(_836.value0, f(_836.value1));
	          };
	          throw new Error("Failed pattern match at Halogen.Query.StateF line 27, column 1 - line 46, column 1: " + [ f.constructor.name, _836.constructor.name ]);
	      };
	  });
	  exports["Get"] = Get;
	  exports["Modify"] = Modify;
	  exports["stateN"] = stateN;
	  exports["modify"] = modify;
	  exports["gets"] = gets;
	  exports["get"] = get;
	  exports["functorStateF"] = functorStateF;;
	 
	})(PS["Halogen.Query.StateF"] = PS["Halogen.Query.StateF"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Control_Coroutine_Aff = PS["Control.Coroutine.Aff"];
	  var Prelude = PS["Prelude"];
	  var Control_Bind = PS["Control.Bind"];
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Data_Functor = PS["Data.Functor"];
	  var Control_Coroutine = PS["Control.Coroutine"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Data_Either = PS["Data.Either"];
	  var Data_Inject = PS["Data.Inject"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];     
	  var Subscribe = (function () {
	      function Subscribe(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Subscribe.create = function (value0) {
	          return function (value1) {
	              return new Subscribe(value0, value1);
	          };
	      };
	      return Subscribe;
	  })();
	  var subscribeN = function (__dict_MonadRec_0) {
	      return function (c) {
	          return function (_839) {
	              return Data_Functor["$>"]((((__dict_MonadRec_0["__superclass_Prelude.Monad_0"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Coroutine.runProcess(__dict_MonadRec_0)(Control_Coroutine["$$"](__dict_MonadRec_0)(_839.value0)(c)))(_839.value1);
	          };
	      };
	  };
	  var functorSubscribeF = new Prelude.Functor(function (f) {
	      return function (_840) {
	          return new Subscribe(_840.value0, f(_840.value1));
	      };
	  });
	  exports["Subscribe"] = Subscribe;
	  exports["subscribeN"] = subscribeN;
	  exports["functorSubscribeF"] = functorSubscribeF;;
	 
	})(PS["Halogen.Query.SubscribeF"] = PS["Halogen.Query.SubscribeF"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Halogen.HTML.Events.Handler

	  exports.preventDefaultImpl = function (e) {
	    return function () {
	      e.preventDefault();
	    };
	  };

	  exports.stopPropagationImpl = function (e) {
	    return function () {
	      e.stopPropagation();
	    };
	  };

	  exports.stopImmediatePropagationImpl = function (e) {
	    return function () {
	      e.stopImmediatePropagation();
	    };
	  };
	 
	})(PS["Halogen.HTML.Events.Handler"] = PS["Halogen.HTML.Events.Handler"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Halogen.HTML.Events.Handler"];
	  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Writer = PS["Control.Monad.Writer"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Apply = PS["Control.Apply"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var DOM = PS["DOM"];
	  var Halogen_HTML_Events_Types = PS["Halogen.HTML.Events.Types"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
	  var Data_Identity = PS["Data.Identity"];     
	  var PreventDefault = (function () {
	      function PreventDefault() {

	      };
	      PreventDefault.value = new PreventDefault();
	      return PreventDefault;
	  })();
	  var StopPropagation = (function () {
	      function StopPropagation() {

	      };
	      StopPropagation.value = new StopPropagation();
	      return StopPropagation;
	  })();
	  var StopImmediatePropagation = (function () {
	      function StopImmediatePropagation() {

	      };
	      StopImmediatePropagation.value = new StopImmediatePropagation();
	      return StopImmediatePropagation;
	  })();
	  var EventHandler = function (x) {
	      return x;
	  };                                                                                                                                                                                                                                                                                                                              
	  var runEventHandler = function (__dict_Monad_0) {
	      return function (__dict_MonadEff_1) {
	          return function (e) {
	              return function (_744) {
	                  var applyUpdate = function (_749) {
	                      if (_749 instanceof PreventDefault) {
	                          return $foreign.preventDefaultImpl(e);
	                      };
	                      if (_749 instanceof StopPropagation) {
	                          return $foreign.stopPropagationImpl(e);
	                      };
	                      if (_749 instanceof StopImmediatePropagation) {
	                          return $foreign.stopImmediatePropagationImpl(e);
	                      };
	                      throw new Error("Failed pattern match at Halogen.HTML.Events.Handler line 88, column 3 - line 89, column 3: " + [ _749.constructor.name ]);
	                  };
	                  var _1146 = Control_Monad_Writer.runWriter(_744);
	                  return Control_Monad_Eff_Class.liftEff(__dict_MonadEff_1)(Control_Apply["*>"](Control_Monad_Eff.applyEff)(Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(_1146.value1)(applyUpdate))(Prelude["return"](Control_Monad_Eff.applicativeEff)(_1146.value0)));
	              };
	          };
	      };
	  };                                                                                                                                                                                                                                                                                                          
	  var functorEventHandler = new Prelude.Functor(function (f) {
	      return function (_745) {
	          return Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(_745);
	      };
	  });
	  var applyEventHandler = new Prelude.Apply(function () {
	      return functorEventHandler;
	  }, function (_746) {
	      return function (_747) {
	          return Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Data_Monoid.monoidArray)(Data_Identity.applyIdentity))(_746)(_747);
	      };
	  });
	  var applicativeEventHandler = new Prelude.Applicative(function () {
	      return applyEventHandler;
	  }, Prelude["<<<"](Prelude.semigroupoidFn)(EventHandler)(Prelude.pure(Control_Monad_Writer_Trans.applicativeWriterT(Data_Monoid.monoidArray)(Data_Identity.applicativeIdentity))));
	  exports["runEventHandler"] = runEventHandler;
	  exports["functorEventHandler"] = functorEventHandler;
	  exports["applyEventHandler"] = applyEventHandler;
	  exports["applicativeEventHandler"] = applicativeEventHandler;;
	 
	})(PS["Halogen.HTML.Events.Handler"] = PS["Halogen.HTML.Events.Handler"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_ExistsR = PS["Data.ExistsR"];
	  var Data_Exists = PS["Data.Exists"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Halogen_HTML_Events_Handler = PS["Halogen.HTML.Events.Handler"];
	  var Halogen_HTML_Events_Types = PS["Halogen.HTML.Events.Types"];
	  var TagName = function (x) {
	      return x;
	  };
	  var EventName = function (x) {
	      return x;
	  };
	  var HandlerF = (function () {
	      function HandlerF(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      HandlerF.create = function (value0) {
	          return function (value1) {
	              return new HandlerF(value0, value1);
	          };
	      };
	      return HandlerF;
	  })();
	  var Prop = (function () {
	      function Prop(value0) {
	          this.value0 = value0;
	      };
	      Prop.create = function (value0) {
	          return new Prop(value0);
	      };
	      return Prop;
	  })();
	  var Attr = (function () {
	      function Attr(value0, value1, value2) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	      };
	      Attr.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return new Attr(value0, value1, value2);
	              };
	          };
	      };
	      return Attr;
	  })();
	  var Key = (function () {
	      function Key(value0) {
	          this.value0 = value0;
	      };
	      Key.create = function (value0) {
	          return new Key(value0);
	      };
	      return Key;
	  })();
	  var Handler = (function () {
	      function Handler(value0) {
	          this.value0 = value0;
	      };
	      Handler.create = function (value0) {
	          return new Handler(value0);
	      };
	      return Handler;
	  })();
	  var Initializer = (function () {
	      function Initializer(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Initializer.create = function (value0) {
	          return function (value1) {
	              return new Initializer(value0, value1);
	          };
	      };
	      return Initializer;
	  })();
	  var Finalizer = (function () {
	      function Finalizer(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Finalizer.create = function (value0) {
	          return function (value1) {
	              return new Finalizer(value0, value1);
	          };
	      };
	      return Finalizer;
	  })();
	  var Text = (function () {
	      function Text(value0) {
	          this.value0 = value0;
	      };
	      Text.create = function (value0) {
	          return new Text(value0);
	      };
	      return Text;
	  })();
	  var Element = (function () {
	      function Element(value0, value1, value2, value3) {
	          this.value0 = value0;
	          this.value1 = value1;
	          this.value2 = value2;
	          this.value3 = value3;
	      };
	      Element.create = function (value0) {
	          return function (value1) {
	              return function (value2) {
	                  return function (value3) {
	                      return new Element(value0, value1, value2, value3);
	                  };
	              };
	          };
	      };
	      return Element;
	  })();
	  var Placeholder = (function () {
	      function Placeholder(value0) {
	          this.value0 = value0;
	      };
	      Placeholder.create = function (value0) {
	          return new Placeholder(value0);
	      };
	      return Placeholder;
	  })();
	  var tagName = TagName;
	  var runTagName = function (_932) {
	      return _932;
	  };
	  var runPropName = function (_933) {
	      return _933;
	  };
	  var runNamespace = function (_931) {
	      return _931;
	  };
	  var runEventName = function (_935) {
	      return _935;
	  };
	  var runAttrName = function (_934) {
	      return _934;
	  };
	  var handler = function (name) {
	      return function (k) {
	          return new Handler(Data_ExistsR.mkExistsR(new HandlerF(name, Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Halogen_HTML_Events_Handler.functorEventHandler)(Data_Maybe.Just.create))(k))));
	      };
	  };
	  var functorProp = new Prelude.Functor(function (f) {
	      return function (_938) {
	          if (_938 instanceof Prop) {
	              return new Prop(_938.value0);
	          };
	          if (_938 instanceof Key) {
	              return new Key(_938.value0);
	          };
	          if (_938 instanceof Attr) {
	              return new Attr(_938.value0, _938.value1, _938.value2);
	          };
	          if (_938 instanceof Handler) {
	              return Data_ExistsR.runExistsR(function (_929) {
	                  return new Handler(Data_ExistsR.mkExistsR(new HandlerF(_929.value0, Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Halogen_HTML_Events_Handler.functorEventHandler)(Prelude.map(Data_Maybe.functorMaybe)(f)))(_929.value1))));
	              })(_938.value0);
	          };
	          if (_938 instanceof Initializer) {
	              return new Initializer(_938.value0, Prelude["<<<"](Prelude.semigroupoidFn)(f)(_938.value1));
	          };
	          if (_938 instanceof Finalizer) {
	              return new Finalizer(_938.value0, Prelude["<<<"](Prelude.semigroupoidFn)(f)(_938.value1));
	          };
	          throw new Error("Failed pattern match at Halogen.HTML.Core line 111, column 1 - line 121, column 1: " + [ f.constructor.name, _938.constructor.name ]);
	      };
	  });
	  var substPlaceholder = function (__dict_Applicative_0) {
	      return function (f) {
	          return function (g) {
	              return function (_930) {
	                  if (_930 instanceof Text) {
	                      return Prelude.pure(__dict_Applicative_0)(new Text(_930.value0));
	                  };
	                  if (_930 instanceof Element) {
	                      return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Element.create(_930.value0)(_930.value1)(Prelude["<$>"](Prelude.functorArray)(Prelude["<$>"](functorProp)(g))(_930.value2)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(__dict_Applicative_0)(substPlaceholder(__dict_Applicative_0)(f)(g))(_930.value3));
	                  };
	                  if (_930 instanceof Placeholder) {
	                      return f(_930.value0);
	                  };
	                  throw new Error("Failed pattern match: " + [ f.constructor.name, g.constructor.name, _930.constructor.name ]);
	              };
	          };
	      };
	  };
	  var eventName = EventName;
	  var element = Element.create(Data_Maybe.Nothing.value);
	  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
	      return function (g) {
	          var go = function (_937) {
	              if (_937 instanceof Text) {
	                  return new Text(_937.value0);
	              };
	              if (_937 instanceof Element) {
	                  return new Element(_937.value0, _937.value1, Prelude["<$>"](Prelude.functorArray)(Prelude["<$>"](functorProp)(g))(_937.value2), Prelude["<$>"](Prelude.functorArray)(go)(_937.value3));
	              };
	              if (_937 instanceof Placeholder) {
	                  return new Placeholder(f(_937.value0));
	              };
	              throw new Error("Failed pattern match at Halogen.HTML.Core line 74, column 1 - line 81, column 1: " + [ _937.constructor.name ]);
	          };
	          return go;
	      };
	  });
	  var functorHTML = new Prelude.Functor(Data_Bifunctor.rmap(bifunctorHTML));
	  exports["HandlerF"] = HandlerF;
	  exports["Prop"] = Prop;
	  exports["Attr"] = Attr;
	  exports["Key"] = Key;
	  exports["Handler"] = Handler;
	  exports["Initializer"] = Initializer;
	  exports["Finalizer"] = Finalizer;
	  exports["Text"] = Text;
	  exports["Element"] = Element;
	  exports["Placeholder"] = Placeholder;
	  exports["runEventName"] = runEventName;
	  exports["eventName"] = eventName;
	  exports["runAttrName"] = runAttrName;
	  exports["runPropName"] = runPropName;
	  exports["runTagName"] = runTagName;
	  exports["tagName"] = tagName;
	  exports["runNamespace"] = runNamespace;
	  exports["handler"] = handler;
	  exports["substPlaceholder"] = substPlaceholder;
	  exports["element"] = element;
	  exports["bifunctorHTML"] = bifunctorHTML;
	  exports["functorHTML"] = functorHTML;
	  exports["functorProp"] = functorProp;;
	 
	})(PS["Halogen.HTML.Core"] = PS["Halogen.HTML.Core"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Bifunctor = PS["Data.Bifunctor"];
	  var Control_Monad_State = PS["Control.Monad.State"];
	  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Data_Map = PS["Data.Map"];
	  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Halogen_Query_StateF = PS["Halogen.Query.StateF"];
	  var Halogen_Query_SubscribeF = PS["Halogen.Query.SubscribeF"];
	  var Data_Either = PS["Data.Either"];
	  var Control_Apply = PS["Control.Apply"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Control_Bind = PS["Control.Bind"];
	  var Control_Coroutine = PS["Control.Coroutine"];
	  var Control_Plus = PS["Control.Plus"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Const = PS["Data.Const"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
	  var Data_Void = PS["Data.Void"];
	  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
	  var Data_Identity = PS["Data.Identity"];
	  var Data_Inject = PS["Data.Inject"];
	  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
	  var ChildF = (function () {
	      function ChildF(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      ChildF.create = function (value0) {
	          return function (value1) {
	              return new ChildF(value0, value1);
	          };
	      };
	      return ChildF;
	  })();
	  var renderComponent = function (_948) {
	      return Control_Monad_State.runState(_948.render);
	  };
	  var render = function (__dict_Ord_0) {
	      return function (fromQ) {
	          return function (toQ$prime) {
	              return function (c) {
	                  return function (f) {
	                      var renderChild$prime = function (st) {
	                          return function (p) {
	                              return function (_956) {
	                                  var _1166 = renderComponent(_956.value0)(_956.value1);
	                                  return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(function (st_2) {
	                                      var _1167 = {};
	                                      for (var _1168 in st_2) {
	                                          if (st_2.hasOwnProperty(_1168)) {
	                                              _1167[_1168] = st_2[_1168];
	                                          };
	                                      };
	                                      _1167.children = Data_Map.insert(__dict_Ord_0)(p)(new Data_Tuple.Tuple(_956.value0, _1166.value1))(st_2.children);
	                                      return _1167;
	                                  }))(function () {
	                                      return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Bifunctor.lmap(Halogen_HTML_Core.bifunctorHTML)(toQ$prime)(Prelude["<$>"](Halogen_HTML_Core.functorHTML)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Functor_Coproduct.right)(ChildF.create(p)))(_1166.value0)));
	                                  });
	                              };
	                          };
	                      };
	                      var renderChild = function (st) {
	                          return function (p) {
	                              var _1173 = fromQ(p);
	                              if (_1173 instanceof Data_Either.Left) {
	                                  return renderChild$prime(st)(_1173.value0)(Data_Maybe["fromMaybe'"](function (_947) {
	                                      return f(_1173.value0);
	                                  })(Data_Map.lookup(__dict_Ord_0)(_1173.value0)(st.children)));
	                              };
	                              if (_1173 instanceof Data_Either.Right) {
	                                  return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Halogen_HTML_Core.Placeholder(_1173.value0));
	                              };
	                              throw new Error("Failed pattern match at Halogen.Component line 276, column 1 - line 282, column 1: " + [ _1173.constructor.name ]);
	                          };
	                      };
	                      return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity)))(function (_96) {
	                          var _1178 = renderComponent(c)(_96.parent);
	                          return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))({
	                              parent: _1178.value1, 
	                              children: Data_Map.empty
	                          }))(function () {
	                              return Halogen_HTML_Core.substPlaceholder(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(renderChild(_96))(Data_Functor_Coproduct.left)(_1178.value0);
	                          });
	                      });
	                  };
	              };
	          };
	      };
	  };
	  var queryComponent = function (_949) {
	      return _949["eval"];
	  };
	  var component$prime = function (r) {
	      return function (q) {
	          return function (p) {
	              return {
	                  render: Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(r), 
	                  "eval": q, 
	                  peek: p
	              };
	          };
	      };
	  };
	  var component = function (r) {
	      return function (q) {
	          return component$prime(r)(q)(Prelude["const"](Prelude.pure(Control_Monad_Free.freeApplicative)(Prelude.unit)));
	      };
	  };
	  exports["ChildF"] = ChildF;
	  exports["component"] = component;
	  exports["queryComponent"] = queryComponent;
	  exports["renderComponent"] = renderComponent;;
	 
	})(PS["Halogen.Component"] = PS["Halogen.Component"] || {});
	(function(exports) {
	  /* global exports, require */
	  "use strict";

	  // module Halogen.Internal.VirtualDOM

	  // jshint maxparams: 2
	  exports.prop = function (key, value) {
	    var props = {};
	    props[key] = value;
	    return props;
	  };

	  // jshint maxparams: 2
	  exports.attr = function (key, value) {
	    var props = { attributes: {} };
	    props.attributes[key] = value;
	    return props;
	  };

	  // jshint maxparams: 2
	  exports.handlerProp = function (key, f) {
	    var props = {};
	    var Hook = function () {};
	    Hook.prototype.callback = function (e) {
	      f(e)();
	    };
	    Hook.prototype.hook = function (node) {
	      node.addEventListener(key, this.callback);
	    };
	    Hook.prototype.unhook = function (node) {
	      node.removeEventListener(key, this.callback);
	    };
	    props["halogen-hook-" + key] = new Hook(f);
	    return props;
	  };

	  // jshint maxparams: 1
	  exports.initProp = function (f) {
	    var hasRun = false;
	    var Hook = function () {};
	    Hook.prototype.hook = function (node) {
	      if (!hasRun) {
	        hasRun = true;
	        f(node)();
	      }
	    };
	    return { "halogen-init": new Hook(f) };
	  };

	  exports.finalizerProp = function (f) {
	    var hasRun = false;
	    var Hook = function () {};
	    Hook.prototype.unhook = function (node) {
	      if (!hasRun) {
	        hasRun = true;
	        f(node)();
	      }
	    };
	    return { "halogen-final": new Hook(f) };
	  };

	  exports.concatProps = function () {
	    // jshint maxparams: 2
	    var hOP = Object.prototype.hasOwnProperty;
	    var copy = function (props, result) {
	      for (var key in props) {
	        if (hOP.call(props, key)) {
	          if (key === "attributes") {
	            var attrs = props[key];
	            var resultAttrs = result[key] || (result[key] = {});
	            for (var attr in attrs) {
	              if (hOP.call(attrs, attr)) {
	                resultAttrs[attr] = attrs[attr];
	              }
	            }
	          } else {
	            result[key] = props[key];
	          }
	        }
	      }
	      return result;
	    };
	    return function (p1, p2) {
	      return copy(p2, copy(p1, {}));
	    };
	  }();

	  exports.emptyProps = {};

	  exports.createElement = function () {
	    var vcreateElement = __webpack_require__(3);
	    return function (vtree) {
	      return vcreateElement(vtree);
	    };
	  }();

	  exports.diff = function () {
	    var vdiff = __webpack_require__(16);
	    return function (vtree1) {
	      return function (vtree2) {
	        return vdiff(vtree1, vtree2);
	      };
	    };
	  }();

	  exports.patch = function () {
	    var vpatch = __webpack_require__(21);
	    return function (p) {
	      return function (node) {
	        return function () {
	          return vpatch(node, p);
	        };
	      };
	    };
	  }();

	  exports.vtext = function () {
	    var VText = __webpack_require__(26);
	    return function (s) {
	      return new VText(s);
	    };
	  }();

	  exports.vnode = function () {
	    var VirtualNode = __webpack_require__(27);
	    var SoftSetHook = __webpack_require__(28);
	    return function (namespace) {
	      return function (name) {
	        return function (key) {
	          return function (props) {
	            return function (children) {
	              if (name === "input" && props.value !== undefined) {
	                props.value = new SoftSetHook(props.value);
	              }
	              return new VirtualNode(name, props, children, key, namespace);
	            };
	          };
	        };
	      };
	    };
	  }();
	 
	})(PS["Halogen.Internal.VirtualDOM"] = PS["Halogen.Internal.VirtualDOM"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Halogen.Internal.VirtualDOM"];
	  var Data_Function = PS["Data.Function"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];     
	  var semigroupProps = new Prelude.Semigroup(Data_Function.runFn2($foreign.concatProps));
	  var monoidProps = new Data_Monoid.Monoid(function () {
	      return semigroupProps;
	  }, $foreign.emptyProps);
	  exports["semigroupProps"] = semigroupProps;
	  exports["monoidProps"] = monoidProps;
	  exports["vnode"] = $foreign.vnode;
	  exports["vtext"] = $foreign.vtext;
	  exports["patch"] = $foreign.patch;
	  exports["diff"] = $foreign.diff;
	  exports["createElement"] = $foreign.createElement;
	  exports["finalizerProp"] = $foreign.finalizerProp;
	  exports["initProp"] = $foreign.initProp;
	  exports["handlerProp"] = $foreign.handlerProp;
	  exports["attr"] = $foreign.attr;
	  exports["prop"] = $foreign.prop;;
	 
	})(PS["Halogen.Internal.VirtualDOM"] = PS["Halogen.Internal.VirtualDOM"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_Monoid = PS["Data.Monoid"];
	  var Prelude = PS["Prelude"];
	  var Halogen_Internal_VirtualDOM = PS["Halogen.Internal.VirtualDOM"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Control_Monad_State = PS["Control.Monad.State"];
	  var Data_Exists = PS["Data.Exists"];
	  var Data_Function = PS["Data.Function"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_ExistsR = PS["Data.ExistsR"];
	  var Halogen_HTML_Events_Handler = PS["Halogen.HTML.Events.Handler"];
	  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
	  var Data_StrMap = PS["Data.StrMap"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Monad = PS["Control.Monad"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_List = PS["Data.List"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Halogen_Effects = PS["Halogen.Effects"];
	  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
	  var Data_Identity = PS["Data.Identity"];     
	  var handleAff = Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
	  var ifprop = function (oldState) {
	      return function (getter) {
	          return function (modifier) {
	              return function (key) {
	                  return function (mkProp) {
	                      return function (dr) {
	                          return function (f) {
	                              return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(getter))(function (_98) {
	                                  var lastMemo = Data_StrMap.lookup(key)(getter(oldState));
	                                  var currentMemo = Data_StrMap.lookup(key)(_98);
	                                  var prop = (function () {
	                                      var _1169 = Control_Alt["<|>"](Data_Maybe.altMaybe)(lastMemo)(currentMemo);
	                                      if (_1169 instanceof Data_Maybe.Nothing) {
	                                          return mkProp(Prelude["<<<"](Prelude.semigroupoidFn)(handleAff)(Prelude["<<<"](Prelude.semigroupoidFn)(dr)(f)));
	                                      };
	                                      if (_1169 instanceof Data_Maybe.Just) {
	                                          return _1169.value0;
	                                      };
	                                      throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 83, column 1 - line 91, column 1: " + [ _1169.constructor.name ]);
	                                  })();
	                                  return Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad.when(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Data_Maybe.isNothing(currentMemo))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(modifier(Data_StrMap.insert(key)(prop)(_98)))))(function () {
	                                      return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(prop);
	                                  });
	                              });
	                          };
	                      };
	                  };
	              };
	          };
	      };
	  };
	  var renderProp = function (dr) {
	      return function (st) {
	          return function (_964) {
	              if (_964 instanceof Halogen_HTML_Core.Prop) {
	                  return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Exists.runExists(function (_962) {
	                      return Halogen_Internal_VirtualDOM.prop(Halogen_HTML_Core.runPropName(_962.value0), _962.value1);
	                  })(_964.value0));
	              };
	              if (_964 instanceof Halogen_HTML_Core.Attr) {
	                  var attrName = Data_Maybe.maybe("")(function (ns$prime) {
	                      return Halogen_HTML_Core.runNamespace(ns$prime) + ":";
	                  })(_964.value0) + Halogen_HTML_Core.runAttrName(_964.value1);
	                  return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.attr(attrName, _964.value2));
	              };
	              if (_964 instanceof Halogen_HTML_Core.Handler) {
	                  return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_ExistsR.runExistsR(function (_963) {
	                      return Halogen_Internal_VirtualDOM.handlerProp(Halogen_HTML_Core.runEventName(_963.value0), function (ev) {
	                          return handleAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Halogen_HTML_Events_Handler.runEventHandler(Control_Monad_Aff.monadAff)(Control_Monad_Aff.monadEffAff)(ev)(_963.value1(ev)))(Data_Maybe.maybe(Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit))(dr)));
	                      });
	                  })(_964.value0));
	              };
	              if (_964 instanceof Halogen_HTML_Core.Initializer) {
	                  return ifprop(st)(function (_4) {
	                      return _4.initializers;
	                  })(function (is) {
	                      return function (_5) {
	                          var _1186 = {};
	                          for (var _1187 in _5) {
	                              if (_5.hasOwnProperty(_1187)) {
	                                  _1186[_1187] = _5[_1187];
	                              };
	                          };
	                          _1186.initializers = is;
	                          return _1186;
	                      };
	                  })(_964.value0)(Halogen_Internal_VirtualDOM.initProp)(dr)(_964.value1);
	              };
	              if (_964 instanceof Halogen_HTML_Core.Finalizer) {
	                  return ifprop(st)(function (_6) {
	                      return _6.finalizers;
	                  })(function (fs) {
	                      return function (_7) {
	                          var _1190 = {};
	                          for (var _1191 in _7) {
	                              if (_7.hasOwnProperty(_1191)) {
	                                  _1190[_1191] = _7[_1191];
	                              };
	                          };
	                          _1190.finalizers = fs;
	                          return _1190;
	                      };
	                  })(_964.value0)(Halogen_Internal_VirtualDOM.finalizerProp)(dr)(_964.value1);
	              };
	              return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Monoid.mempty(Halogen_Internal_VirtualDOM.monoidProps));
	          };
	      };
	  };
	  var findKey = function (r) {
	      return function (_965) {
	          if (_965 instanceof Halogen_HTML_Core.Key) {
	              return new Data_Maybe.Just(_965.value0);
	          };
	          return r;
	      };
	  };
	  var emptyRenderState = {
	      initializers: Data_Monoid.mempty(Data_StrMap.monoidStrMap(Halogen_Internal_VirtualDOM.semigroupProps)), 
	      finalizers: Data_Monoid.mempty(Data_StrMap.monoidStrMap(Halogen_Internal_VirtualDOM.semigroupProps))
	  };
	  var renderHTML = function (f) {
	      return function (html) {
	          return function (st) {
	              var go = function (_966) {
	                  if (_966 instanceof Halogen_HTML_Core.Text) {
	                      return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vtext(_966.value0));
	                  };
	                  if (_966 instanceof Halogen_HTML_Core.Element) {
	                      var tag = Halogen_HTML_Core.runTagName(_966.value1);
	                      var ns$prime = Data_Nullable.toNullable(Prelude["<$>"](Data_Maybe.functorMaybe)(Halogen_HTML_Core.runNamespace)(_966.value0));
	                      var key = Data_Nullable.toNullable(Data_Foldable.foldl(Data_Foldable.foldableArray)(findKey)(Data_Maybe.Nothing.value)(_966.value2));
	                      return Prelude["<*>"](Control_Monad_State_Trans.applyStateT(Data_Identity.monadIdentity))(Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vnode(ns$prime)(tag)(key))(Prelude["<$>"](Control_Monad_State_Trans.functorStateT(Data_Identity.monadIdentity))(Data_Foldable.fold(Data_Foldable.foldableArray)(Halogen_Internal_VirtualDOM.monoidProps))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(renderProp(f)(st))(_966.value2))))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(go)(_966.value3));
	                  };
	                  if (_966 instanceof Halogen_HTML_Core.Placeholder) {
	                      return Prelude.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Halogen_Internal_VirtualDOM.vtext(""));
	                  };
	                  throw new Error("Failed pattern match at Halogen.HTML.Renderer.VirtualDOM line 48, column 1 - line 49, column 1: " + [ _966.constructor.name ]);
	              };
	              return Control_Monad_State.runState(go(html))(emptyRenderState);
	          };
	      };
	  };
	  exports["emptyRenderState"] = emptyRenderState;
	  exports["renderHTML"] = renderHTML;;
	 
	})(PS["Halogen.HTML.Renderer.VirtualDOM"] = PS["Halogen.HTML.Renderer.VirtualDOM"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Halogen_Component = PS["Halogen.Component"];
	  var Halogen_Query_SubscribeF = PS["Halogen.Query.SubscribeF"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
	  var Control_Monad_State = PS["Control.Monad.State"];
	  var Halogen_Query_StateF = PS["Halogen.Query.StateF"];
	  var Halogen_HTML_Renderer_VirtualDOM = PS["Halogen.HTML.Renderer.VirtualDOM"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Halogen_Internal_VirtualDOM = PS["Halogen.Internal.VirtualDOM"];
	  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
	  var Control_Coroutine = PS["Control.Coroutine"];
	  var Control_Monad_Trans = PS["Control.Monad.Trans"];
	  var Data_Functor_Coproduct = PS["Data.Functor.Coproduct"];
	  var Data_Inject = PS["Data.Inject"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Data_Void = PS["Data.Void"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Halogen_Effects = PS["Halogen.Effects"];
	  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
	  var Data_Identity = PS["Data.Identity"];
	  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
	  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];     
	  var runUI = function (c) {
	      return function (s) {
	          var $$eval = function (ref) {
	              var runStateStep = function (i) {
	                  return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ref))(function (_100) {
	                      var _1170 = Control_Monad_State.runState(Halogen_Query_StateF.stateN(Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(i))(_100.state);
	                      var _1171 = Halogen_Component.renderComponent(c)(_1170.value1);
	                      var _1172 = Halogen_HTML_Renderer_VirtualDOM.renderHTML(driver(ref))(_1171.value0)(_100.memo);
	                      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Halogen_Internal_VirtualDOM.patch(Halogen_Internal_VirtualDOM.diff(_100.vtree)(_1172.value0))(_100.node)))(function (_99) {
	                          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(ref)({
	                              node: _99, 
	                              vtree: _1172.value0, 
	                              state: _1171.value1, 
	                              memo: _1172.value1
	                          }))(function () {
	                              return Prelude.pure(Control_Monad_Aff.applicativeAff)(_1170.value0);
	                          });
	                      });
	                  });
	              };
	              var consumer = Control_Monad_Rec_Class.forever(Control_Monad_Free_Trans.monadRecFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Prelude[">>="](Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine.await(Control_Monad_Aff.monadAff))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff))(driver(ref))));
	              var runWidgetStep = Halogen_Query_SubscribeF.subscribeN(Control_Monad_Aff.monadRecAff)(consumer);
	              return Data_Functor_Coproduct.coproduct(runStateStep)(Data_Functor_Coproduct.coproduct(runWidgetStep)(Prelude.id(Prelude.categoryFn)));
	          };
	          var driver = function (ref) {
	              return function (q) {
	                  return Control_Monad_Free.runFreeM(Data_Functor_Coproduct.functorCoproduct(Halogen_Query_StateF.functorStateF)(Data_Functor_Coproduct.functorCoproduct(Halogen_Query_SubscribeF.functorSubscribeF)(Control_Monad_Aff.functorAff)))(Control_Monad_Aff.monadRecAff)($$eval(ref))(Halogen_Component.queryComponent(c)(q));
	              };
	          };
	          var _1184 = Halogen_Component.renderComponent(c)(s);
	          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (_101) {
	              var _1186 = Halogen_HTML_Renderer_VirtualDOM.renderHTML(driver(_101))(_1184.value0)(Halogen_HTML_Renderer_VirtualDOM.emptyRenderState);
	              var node = Halogen_Internal_VirtualDOM.createElement(_1186.value0);
	              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.putVar(_101)({
	                  node: node, 
	                  vtree: _1186.value0, 
	                  state: _1184.value1, 
	                  memo: _1186.value1
	              }))(function () {
	                  return Prelude.pure(Control_Monad_Aff.applicativeAff)({
	                      node: node, 
	                      driver: driver(_101)
	                  });
	              });
	          });
	      };
	  };
	  var action = function (__dict_Inject_1) {
	      return function (f) {
	          return Data_Inject.inj(__dict_Inject_1)(f(Prelude.unit));
	      };
	  };
	  exports["action"] = action;
	  exports["runUI"] = runUI;;
	 
	})(PS["Halogen"] = PS["Halogen"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
	  var Prelude = PS["Prelude"];
	  var text = Halogen_HTML_Core.Text.create;
	  var h1 = function (xs) {
	      return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("h1"))(xs);
	  };
	  var h1_ = h1([  ]);
	  var div = function (xs) {
	      return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("div"))(xs);
	  };
	  var div_ = div([  ]);
	  var button = function (xs) {
	      return Halogen_HTML_Core.element(Halogen_HTML_Core.tagName("button"))(xs);
	  };
	  exports["h1_"] = h1_;
	  exports["h1"] = h1;
	  exports["div_"] = div_;
	  exports["div"] = div;
	  exports["button"] = button;
	  exports["text"] = text;;
	 
	})(PS["Halogen.HTML.Elements"] = PS["Halogen.HTML.Elements"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Halogen = PS["Halogen"];
	  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Data_Inject = PS["Data.Inject"];
	  var Halogen_HTML_Events_Handler = PS["Halogen.HTML.Events.Handler"];
	  var Halogen_HTML_Events_Types = PS["Halogen.HTML.Events.Types"];
	  var Halogen_Component = PS["Halogen.Component"];
	  var Halogen_Effects = PS["Halogen.Effects"];                                            
	  var onMouseDown = Halogen_HTML_Core.handler(Halogen_HTML_Core.eventName("mousedown"));
	  var input = function (__dict_Inject_1) {
	      return function (f) {
	          return function (x) {
	              return Prelude.pure(Halogen_HTML_Events_Handler.applicativeEventHandler)(Halogen.action(__dict_Inject_1)(f(x)));
	          };
	      };
	  };
	  exports["onMouseDown"] = onMouseDown;
	  exports["input"] = input;;
	 
	})(PS["Halogen.HTML.Events"] = PS["Halogen.HTML.Events"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var Control_Bind = PS["Control.Bind"];
	  var DOM_HTML_Document = PS["DOM.HTML.Document"];
	  var DOM_HTML_Window = PS["DOM.HTML.Window"];
	  var DOM_HTML = PS["DOM.HTML"];
	  var DOM_Node_Node = PS["DOM.Node.Node"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
	  var DOM_Event_EventTypes = PS["DOM.Event.EventTypes"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var DOM = PS["DOM"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];     
	  var appendToBody = function (__dict_MonadEff_0) {
	      return function (e) {
	          var onLoad = function (_961) {
	              return function __do() {
	                  var _97 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(DOM_HTML_Document.body)(DOM_HTML_Window.document))(DOM_HTML.window))();
	                  return (function () {
	                      if (_97 instanceof Data_Maybe.Nothing) {
	                          return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
	                      };
	                      if (_97 instanceof Data_Maybe.Just) {
	                          return Prelude["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(DOM_HTML_Types.htmlElementToNode(e))(DOM_HTML_Types.htmlElementToNode(_97.value0)));
	                      };
	                      throw new Error("Failed pattern match at Halogen.Util line 26, column 3 - line 27, column 3: " + [ _97.constructor.name ]);
	                  })()();
	              };
	          };
	          return Control_Monad_Eff_Class.liftEff(__dict_MonadEff_0)(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Prelude["<<<"](Prelude.semigroupoidFn)(DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(onLoad))(false))(DOM_HTML_Types.windowToEventTarget))(DOM_HTML.window));
	      };
	  };
	  exports["appendToBody"] = appendToBody;;
	 
	})(PS["Halogen.Util"] = PS["Halogen.Util"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.3.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
	  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
	  var Halogen_Query_StateF = PS["Halogen.Query.StateF"];
	  var Control_Monad_Free = PS["Control.Monad.Free"];
	  var Control_Monad_Aff_Console = PS["Control.Monad.Aff.Console"];
	  var Halogen_Component = PS["Halogen.Component"];
	  var Control_Monad_Aff = PS["Control.Monad.Aff"];
	  var Halogen = PS["Halogen"];
	  var Halogen_Util = PS["Halogen.Util"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
	  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
	  var Data_Either = PS["Data.Either"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Foreign_Class = PS["Data.Foreign.Class"];
	  var Data_Functor = PS["Data.Functor"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Halogen_HTML_Events_Types = PS["Halogen.HTML.Events.Types"];
	  var Halogen_HTML = PS["Halogen.HTML"];
	  var Halogen_HTML_Events_Forms = PS["Halogen.HTML.Events.Forms"];
	  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
	  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
	  var Halogen_Effects = PS["Halogen.Effects"];
	  var Data_Inject = PS["Data.Inject"];     
	  var StartDragging = (function () {
	      function StartDragging(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      StartDragging.create = function (value0) {
	          return function (value1) {
	              return new StartDragging(value0, value1);
	          };
	      };
	      return StartDragging;
	  })();
	  var ui = (function () {
	      var render = function (st) {
	          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h1_([ Halogen_HTML_Elements.text("Image cropp") ]), Halogen_HTML_Elements.button([ Halogen_HTML_Events.onMouseDown(Halogen_HTML_Events.input(Data_Inject.injectReflexive)(StartDragging.create)) ])([ Halogen_HTML_Elements.text((function () {
	              if (st.isDragging) {
	                  return "Dragz";
	              };
	              if (!st.isDragging) {
	                  return "Nodragz";
	              };
	              throw new Error("Failed pattern match at Impressor line 55, column 3 - line 56, column 3: " + [ st.isDragging.constructor.name ]);
	          })()) ]) ]);
	      };
	      var $$eval = function (_2) {
	          return Prelude.bind(Control_Monad_Free.freeBind)(Halogen_Query_StateF.modify(Data_Inject.injectLeft)(function (_0) {
	              var _5 = {};
	              for (var _6 in _0) {
	                  if (_0.hasOwnProperty(_6)) {
	                      _5[_6] = _0[_6];
	                  };
	              };
	              _5.isDragging = true;
	              return _5;
	          }))(function () {
	              return Prelude.bind(Control_Monad_Free.freeBind)(Control_Monad_Free.liftFI(Data_Inject.injectRight(Data_Inject.injectRight(Data_Inject.injectReflexive)))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Aff_Console.log)(Prelude.show(Prelude.showNumber))(_2.value0.button)))(function () {
	                  return Prelude.pure(Control_Monad_Free.freeApplicative)(_2.value1);
	              });
	          });
	      };
	      return Halogen_Component.component(render)($$eval);
	  })();
	  var initialState = {
	      isDragging: false
	  };
	  var main = Control_Monad_Aff.launchAff(Prelude.bind(Control_Monad_Aff.bindAff)(Halogen.runUI(ui)(initialState))(function (_1) {
	      return Halogen_Util.appendToBody(Control_Monad_Aff.monadEffAff)(_1.node);
	  }));
	  exports["StartDragging"] = StartDragging;
	  exports["main"] = main;
	  exports["ui"] = ui;
	  exports["initialState"] = initialState;;
	 
	})(PS["Impressor"] = PS["Impressor"] || {});

	PS["Impressor"].main();
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).setImmediate, __webpack_require__(1).clearImmediate))

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(2).nextTick;
	var apply = Function.prototype.apply;
	var slice = Array.prototype.slice;
	var immediateIds = {};
	var nextImmediateId = 0;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) { timeout.close(); };

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// That's not how node.js implements it but the exposed api is the same.
	exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
	  var id = nextImmediateId++;
	  var args = arguments.length < 2 ? false : slice.call(arguments, 1);

	  immediateIds[id] = true;

	  nextTick(function onNextTick() {
	    if (immediateIds[id]) {
	      // fn.call() is faster so we optimize for the common use-case
	      // @see http://jsperf.com/call-apply-segu
	      if (args) {
	        fn.apply(null, args);
	      } else {
	        fn.call(null);
	      }
	      // Prevent ids from leaking
	      exports.clearImmediate(id);
	    }
	  });

	  return id;
	};

	exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
	  delete immediateIds[id];
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1).setImmediate, __webpack_require__(1).clearImmediate))

/***/ },
/* 2 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            currentQueue[queueIndex].run();
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var createElement = __webpack_require__(4)

	module.exports = createElement


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(5)

	var applyProperties = __webpack_require__(7)

	var isVNode = __webpack_require__(10)
	var isVText = __webpack_require__(12)
	var isWidget = __webpack_require__(13)
	var handleThunk = __webpack_require__(14)

	module.exports = createElement

	function createElement(vnode, opts) {
	    var doc = opts ? opts.document || document : document
	    var warn = opts ? opts.warn : null

	    vnode = handleThunk(vnode).a

	    if (isWidget(vnode)) {
	        return vnode.init()
	    } else if (isVText(vnode)) {
	        return doc.createTextNode(vnode.text)
	    } else if (!isVNode(vnode)) {
	        if (warn) {
	            warn("Item is not a valid virtual dom node", vnode)
	        }
	        return null
	    }

	    var node = (vnode.namespace === null) ?
	        doc.createElement(vnode.tagName) :
	        doc.createElementNS(vnode.namespace, vnode.tagName)

	    var props = vnode.properties
	    applyProperties(node, props)

	    var children = vnode.children

	    for (var i = 0; i < children.length; i++) {
	        var childNode = createElement(children[i], opts)
	        if (childNode) {
	            node.appendChild(childNode)
	        }
	    }

	    return node
	}


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :
	    typeof window !== 'undefined' ? window : {}
	var minDoc = __webpack_require__(6);

	if (typeof document !== 'undefined') {
	    module.exports = document;
	} else {
	    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }

	    module.exports = doccy;
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 6 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(8)
	var isHook = __webpack_require__(9)

	module.exports = applyProperties

	function applyProperties(node, props, previous) {
	    for (var propName in props) {
	        var propValue = props[propName]

	        if (propValue === undefined) {
	            removeProperty(node, propName, propValue, previous);
	        } else if (isHook(propValue)) {
	            removeProperty(node, propName, propValue, previous)
	            if (propValue.hook) {
	                propValue.hook(node,
	                    propName,
	                    previous ? previous[propName] : undefined)
	            }
	        } else {
	            if (isObject(propValue)) {
	                patchObject(node, props, previous, propName, propValue);
	            } else {
	                node[propName] = propValue
	            }
	        }
	    }
	}

	function removeProperty(node, propName, propValue, previous) {
	    if (previous) {
	        var previousValue = previous[propName]

	        if (!isHook(previousValue)) {
	            if (propName === "attributes") {
	                for (var attrName in previousValue) {
	                    node.removeAttribute(attrName)
	                }
	            } else if (propName === "style") {
	                for (var i in previousValue) {
	                    node.style[i] = ""
	                }
	            } else if (typeof previousValue === "string") {
	                node[propName] = ""
	            } else {
	                node[propName] = null
	            }
	        } else if (previousValue.unhook) {
	            previousValue.unhook(node, propName, propValue)
	        }
	    }
	}

	function patchObject(node, props, previous, propName, propValue) {
	    var previousValue = previous ? previous[propName] : undefined

	    // Set attributes
	    if (propName === "attributes") {
	        for (var attrName in propValue) {
	            var attrValue = propValue[attrName]

	            if (attrValue === undefined) {
	                node.removeAttribute(attrName)
	            } else {
	                node.setAttribute(attrName, attrValue)
	            }
	        }

	        return
	    }

	    if(previousValue && isObject(previousValue) &&
	        getPrototype(previousValue) !== getPrototype(propValue)) {
	        node[propName] = propValue
	        return
	    }

	    if (!isObject(node[propName])) {
	        node[propName] = {}
	    }

	    var replacer = propName === "style" ? "" : undefined

	    for (var k in propValue) {
	        var value = propValue[k]
	        node[propName][k] = (value === undefined) ? replacer : value
	    }
	}

	function getPrototype(value) {
	    if (Object.getPrototypeOf) {
	        return Object.getPrototypeOf(value)
	    } else if (value.__proto__) {
	        return value.__proto__
	    } else if (value.constructor) {
	        return value.constructor.prototype
	    }
	}


/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	module.exports = function isObject(x) {
		return typeof x === "object" && x !== null;
	};


/***/ },
/* 9 */
/***/ function(module, exports) {

	module.exports = isHook

	function isHook(hook) {
	    return hook &&
	      (typeof hook.hook === "function" && !hook.hasOwnProperty("hook") ||
	       typeof hook.unhook === "function" && !hook.hasOwnProperty("unhook"))
	}


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(11)

	module.exports = isVirtualNode

	function isVirtualNode(x) {
	    return x && x.type === "VirtualNode" && x.version === version
	}


/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = "2"


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(11)

	module.exports = isVirtualText

	function isVirtualText(x) {
	    return x && x.type === "VirtualText" && x.version === version
	}


/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = isWidget

	function isWidget(w) {
	    return w && w.type === "Widget"
	}


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var isVNode = __webpack_require__(10)
	var isVText = __webpack_require__(12)
	var isWidget = __webpack_require__(13)
	var isThunk = __webpack_require__(15)

	module.exports = handleThunk

	function handleThunk(a, b) {
	    var renderedA = a
	    var renderedB = b

	    if (isThunk(b)) {
	        renderedB = renderThunk(b, a)
	    }

	    if (isThunk(a)) {
	        renderedA = renderThunk(a, null)
	    }

	    return {
	        a: renderedA,
	        b: renderedB
	    }
	}

	function renderThunk(thunk, previous) {
	    var renderedThunk = thunk.vnode

	    if (!renderedThunk) {
	        renderedThunk = thunk.vnode = thunk.render(previous)
	    }

	    if (!(isVNode(renderedThunk) ||
	            isVText(renderedThunk) ||
	            isWidget(renderedThunk))) {
	        throw new Error("thunk did not return a valid node");
	    }

	    return renderedThunk
	}


/***/ },
/* 15 */
/***/ function(module, exports) {

	module.exports = isThunk

	function isThunk(t) {
	    return t && t.type === "Thunk"
	}


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var diff = __webpack_require__(17)

	module.exports = diff


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(18)

	var VPatch = __webpack_require__(19)
	var isVNode = __webpack_require__(10)
	var isVText = __webpack_require__(12)
	var isWidget = __webpack_require__(13)
	var isThunk = __webpack_require__(15)
	var handleThunk = __webpack_require__(14)

	var diffProps = __webpack_require__(20)

	module.exports = diff

	function diff(a, b) {
	    var patch = { a: a }
	    walk(a, b, patch, 0)
	    return patch
	}

	function walk(a, b, patch, index) {
	    if (a === b) {
	        return
	    }

	    var apply = patch[index]
	    var applyClear = false

	    if (isThunk(a) || isThunk(b)) {
	        thunks(a, b, patch, index)
	    } else if (b == null) {

	        // If a is a widget we will add a remove patch for it
	        // Otherwise any child widgets/hooks must be destroyed.
	        // This prevents adding two remove patches for a widget.
	        if (!isWidget(a)) {
	            clearState(a, patch, index)
	            apply = patch[index]
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
	    } else if (isVNode(b)) {
	        if (isVNode(a)) {
	            if (a.tagName === b.tagName &&
	                a.namespace === b.namespace &&
	                a.key === b.key) {
	                var propsPatch = diffProps(a.properties, b.properties)
	                if (propsPatch) {
	                    apply = appendPatch(apply,
	                        new VPatch(VPatch.PROPS, a, propsPatch))
	                }
	                apply = diffChildren(a, b, patch, apply, index)
	            } else {
	                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	                applyClear = true
	            }
	        } else {
	            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	            applyClear = true
	        }
	    } else if (isVText(b)) {
	        if (!isVText(a)) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	            applyClear = true
	        } else if (a.text !== b.text) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	        }
	    } else if (isWidget(b)) {
	        if (!isWidget(a)) {
	            applyClear = true
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
	    }

	    if (apply) {
	        patch[index] = apply
	    }

	    if (applyClear) {
	        clearState(a, patch, index)
	    }
	}

	function diffChildren(a, b, patch, apply, index) {
	    var aChildren = a.children
	    var orderedSet = reorder(aChildren, b.children)
	    var bChildren = orderedSet.children

	    var aLen = aChildren.length
	    var bLen = bChildren.length
	    var len = aLen > bLen ? aLen : bLen

	    for (var i = 0; i < len; i++) {
	        var leftNode = aChildren[i]
	        var rightNode = bChildren[i]
	        index += 1

	        if (!leftNode) {
	            if (rightNode) {
	                // Excess nodes in b need to be added
	                apply = appendPatch(apply,
	                    new VPatch(VPatch.INSERT, null, rightNode))
	            }
	        } else {
	            walk(leftNode, rightNode, patch, index)
	        }

	        if (isVNode(leftNode) && leftNode.count) {
	            index += leftNode.count
	        }
	    }

	    if (orderedSet.moves) {
	        // Reorder nodes last
	        apply = appendPatch(apply, new VPatch(
	            VPatch.ORDER,
	            a,
	            orderedSet.moves
	        ))
	    }

	    return apply
	}

	function clearState(vNode, patch, index) {
	    // TODO: Make this a single walk, not two
	    unhook(vNode, patch, index)
	    destroyWidgets(vNode, patch, index)
	}

	// Patch records for all destroyed widgets must be added because we need
	// a DOM node reference for the destroy function
	function destroyWidgets(vNode, patch, index) {
	    if (isWidget(vNode)) {
	        if (typeof vNode.destroy === "function") {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(VPatch.REMOVE, vNode, null)
	            )
	        }
	    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
	        var children = vNode.children
	        var len = children.length
	        for (var i = 0; i < len; i++) {
	            var child = children[i]
	            index += 1

	            destroyWidgets(child, patch, index)

	            if (isVNode(child) && child.count) {
	                index += child.count
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	// Create a sub-patch for thunks
	function thunks(a, b, patch, index) {
	    var nodes = handleThunk(a, b)
	    var thunkPatch = diff(nodes.a, nodes.b)
	    if (hasPatches(thunkPatch)) {
	        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
	    }
	}

	function hasPatches(patch) {
	    for (var index in patch) {
	        if (index !== "a") {
	            return true
	        }
	    }

	    return false
	}

	// Execute hooks when two nodes are identical
	function unhook(vNode, patch, index) {
	    if (isVNode(vNode)) {
	        if (vNode.hooks) {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(
	                    VPatch.PROPS,
	                    vNode,
	                    undefinedKeys(vNode.hooks)
	                )
	            )
	        }

	        if (vNode.descendantHooks || vNode.hasThunks) {
	            var children = vNode.children
	            var len = children.length
	            for (var i = 0; i < len; i++) {
	                var child = children[i]
	                index += 1

	                unhook(child, patch, index)

	                if (isVNode(child) && child.count) {
	                    index += child.count
	                }
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	function undefinedKeys(obj) {
	    var result = {}

	    for (var key in obj) {
	        result[key] = undefined
	    }

	    return result
	}

	// List diff, naive left to right reordering
	function reorder(aChildren, bChildren) {
	    // O(M) time, O(M) memory
	    var bChildIndex = keyIndex(bChildren)
	    var bKeys = bChildIndex.keys
	    var bFree = bChildIndex.free

	    if (bFree.length === bChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }

	    // O(N) time, O(N) memory
	    var aChildIndex = keyIndex(aChildren)
	    var aKeys = aChildIndex.keys
	    var aFree = aChildIndex.free

	    if (aFree.length === aChildren.length) {
	        return {
	            children: bChildren,
	            moves: null
	        }
	    }

	    // O(MAX(N, M)) memory
	    var newChildren = []

	    var freeIndex = 0
	    var freeCount = bFree.length
	    var deletedItems = 0

	    // Iterate through a and match a node in b
	    // O(N) time,
	    for (var i = 0 ; i < aChildren.length; i++) {
	        var aItem = aChildren[i]
	        var itemIndex

	        if (aItem.key) {
	            if (bKeys.hasOwnProperty(aItem.key)) {
	                // Match up the old keys
	                itemIndex = bKeys[aItem.key]
	                newChildren.push(bChildren[itemIndex])

	            } else {
	                // Remove old keyed items
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        } else {
	            // Match the item in a with the next free item in b
	            if (freeIndex < freeCount) {
	                itemIndex = bFree[freeIndex++]
	                newChildren.push(bChildren[itemIndex])
	            } else {
	                // There are no free items in b to match with
	                // the free items in a, so the extra free nodes
	                // are deleted.
	                itemIndex = i - deletedItems++
	                newChildren.push(null)
	            }
	        }
	    }

	    var lastFreeIndex = freeIndex >= bFree.length ?
	        bChildren.length :
	        bFree[freeIndex]

	    // Iterate through b and append any new keys
	    // O(M) time
	    for (var j = 0; j < bChildren.length; j++) {
	        var newItem = bChildren[j]

	        if (newItem.key) {
	            if (!aKeys.hasOwnProperty(newItem.key)) {
	                // Add any new keyed items
	                // We are adding new items to the end and then sorting them
	                // in place. In future we should insert new items in place.
	                newChildren.push(newItem)
	            }
	        } else if (j >= lastFreeIndex) {
	            // Add any leftover non-keyed items
	            newChildren.push(newItem)
	        }
	    }

	    var simulate = newChildren.slice()
	    var simulateIndex = 0
	    var removes = []
	    var inserts = []
	    var simulateItem

	    for (var k = 0; k < bChildren.length;) {
	        var wantedItem = bChildren[k]
	        simulateItem = simulate[simulateIndex]

	        // remove items
	        while (simulateItem === null && simulate.length) {
	            removes.push(remove(simulate, simulateIndex, null))
	            simulateItem = simulate[simulateIndex]
	        }

	        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	            // if we need a key in this position...
	            if (wantedItem.key) {
	                if (simulateItem && simulateItem.key) {
	                    // if an insert doesn't put this key in place, it needs to move
	                    if (bKeys[simulateItem.key] !== k + 1) {
	                        removes.push(remove(simulate, simulateIndex, simulateItem.key))
	                        simulateItem = simulate[simulateIndex]
	                        // if the remove didn't put the wanted item in place, we need to insert it
	                        if (!simulateItem || simulateItem.key !== wantedItem.key) {
	                            inserts.push({key: wantedItem.key, to: k})
	                        }
	                        // items are matching, so skip ahead
	                        else {
	                            simulateIndex++
	                        }
	                    }
	                    else {
	                        inserts.push({key: wantedItem.key, to: k})
	                    }
	                }
	                else {
	                    inserts.push({key: wantedItem.key, to: k})
	                }
	                k++
	            }
	            // a key in simulate has no matching wanted key, remove it
	            else if (simulateItem && simulateItem.key) {
	                removes.push(remove(simulate, simulateIndex, simulateItem.key))
	            }
	        }
	        else {
	            simulateIndex++
	            k++
	        }
	    }

	    // remove all the remaining nodes from simulate
	    while(simulateIndex < simulate.length) {
	        simulateItem = simulate[simulateIndex]
	        removes.push(remove(simulate, simulateIndex, simulateItem && simulateItem.key))
	    }

	    // If the only moves we have are deletes then we can just
	    // let the delete patch remove these items.
	    if (removes.length === deletedItems && !inserts.length) {
	        return {
	            children: newChildren,
	            moves: null
	        }
	    }

	    return {
	        children: newChildren,
	        moves: {
	            removes: removes,
	            inserts: inserts
	        }
	    }
	}

	function remove(arr, index, key) {
	    arr.splice(index, 1)

	    return {
	        from: index,
	        key: key
	    }
	}

	function keyIndex(children) {
	    var keys = {}
	    var free = []
	    var length = children.length

	    for (var i = 0; i < length; i++) {
	        var child = children[i]

	        if (child.key) {
	            keys[child.key] = i
	        } else {
	            free.push(i)
	        }
	    }

	    return {
	        keys: keys,     // A hash of key name to index
	        free: free      // An array of unkeyed item indices
	    }
	}

	function appendPatch(apply, patch) {
	    if (apply) {
	        if (isArray(apply)) {
	            apply.push(patch)
	        } else {
	            apply = [apply, patch]
	        }

	        return apply
	    } else {
	        return patch
	    }
	}


/***/ },
/* 18 */
/***/ function(module, exports) {

	var nativeIsArray = Array.isArray
	var toString = Object.prototype.toString

	module.exports = nativeIsArray || isArray

	function isArray(obj) {
	    return toString.call(obj) === "[object Array]"
	}


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(11)

	VirtualPatch.NONE = 0
	VirtualPatch.VTEXT = 1
	VirtualPatch.VNODE = 2
	VirtualPatch.WIDGET = 3
	VirtualPatch.PROPS = 4
	VirtualPatch.ORDER = 5
	VirtualPatch.INSERT = 6
	VirtualPatch.REMOVE = 7
	VirtualPatch.THUNK = 8

	module.exports = VirtualPatch

	function VirtualPatch(type, vNode, patch) {
	    this.type = Number(type)
	    this.vNode = vNode
	    this.patch = patch
	}

	VirtualPatch.prototype.version = version
	VirtualPatch.prototype.type = "VirtualPatch"


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(8)
	var isHook = __webpack_require__(9)

	module.exports = diffProps

	function diffProps(a, b) {
	    var diff

	    for (var aKey in a) {
	        if (!(aKey in b)) {
	            diff = diff || {}
	            diff[aKey] = undefined
	        }

	        var aValue = a[aKey]
	        var bValue = b[aKey]

	        if (aValue === bValue) {
	            continue
	        } else if (isObject(aValue) && isObject(bValue)) {
	            if (getPrototype(bValue) !== getPrototype(aValue)) {
	                diff = diff || {}
	                diff[aKey] = bValue
	            } else if (isHook(bValue)) {
	                 diff = diff || {}
	                 diff[aKey] = bValue
	            } else {
	                var objectDiff = diffProps(aValue, bValue)
	                if (objectDiff) {
	                    diff = diff || {}
	                    diff[aKey] = objectDiff
	                }
	            }
	        } else {
	            diff = diff || {}
	            diff[aKey] = bValue
	        }
	    }

	    for (var bKey in b) {
	        if (!(bKey in a)) {
	            diff = diff || {}
	            diff[bKey] = b[bKey]
	        }
	    }

	    return diff
	}

	function getPrototype(value) {
	  if (Object.getPrototypeOf) {
	    return Object.getPrototypeOf(value)
	  } else if (value.__proto__) {
	    return value.__proto__
	  } else if (value.constructor) {
	    return value.constructor.prototype
	  }
	}


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var patch = __webpack_require__(22)

	module.exports = patch


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(5)
	var isArray = __webpack_require__(18)

	var render = __webpack_require__(4)
	var domIndex = __webpack_require__(23)
	var patchOp = __webpack_require__(24)
	module.exports = patch

	function patch(rootNode, patches, renderOptions) {
	    renderOptions = renderOptions || {}
	    renderOptions.patch = renderOptions.patch && renderOptions.patch !== patch
	        ? renderOptions.patch
	        : patchRecursive
	    renderOptions.render = renderOptions.render || render

	    return renderOptions.patch(rootNode, patches, renderOptions)
	}

	function patchRecursive(rootNode, patches, renderOptions) {
	    var indices = patchIndices(patches)

	    if (indices.length === 0) {
	        return rootNode
	    }

	    var index = domIndex(rootNode, patches.a, indices)
	    var ownerDocument = rootNode.ownerDocument

	    if (!renderOptions.document && ownerDocument !== document) {
	        renderOptions.document = ownerDocument
	    }

	    for (var i = 0; i < indices.length; i++) {
	        var nodeIndex = indices[i]
	        rootNode = applyPatch(rootNode,
	            index[nodeIndex],
	            patches[nodeIndex],
	            renderOptions)
	    }

	    return rootNode
	}

	function applyPatch(rootNode, domNode, patchList, renderOptions) {
	    if (!domNode) {
	        return rootNode
	    }

	    var newNode

	    if (isArray(patchList)) {
	        for (var i = 0; i < patchList.length; i++) {
	            newNode = patchOp(patchList[i], domNode, renderOptions)

	            if (domNode === rootNode) {
	                rootNode = newNode
	            }
	        }
	    } else {
	        newNode = patchOp(patchList, domNode, renderOptions)

	        if (domNode === rootNode) {
	            rootNode = newNode
	        }
	    }

	    return rootNode
	}

	function patchIndices(patches) {
	    var indices = []

	    for (var key in patches) {
	        if (key !== "a") {
	            indices.push(Number(key))
	        }
	    }

	    return indices
	}


/***/ },
/* 23 */
/***/ function(module, exports) {

	// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
	// We don't want to read all of the DOM nodes in the tree so we use
	// the in-order tree indexing to eliminate recursion down certain branches.
	// We only recurse into a DOM node if we know that it contains a child of
	// interest.

	var noChild = {}

	module.exports = domIndex

	function domIndex(rootNode, tree, indices, nodes) {
	    if (!indices || indices.length === 0) {
	        return {}
	    } else {
	        indices.sort(ascending)
	        return recurse(rootNode, tree, indices, nodes, 0)
	    }
	}

	function recurse(rootNode, tree, indices, nodes, rootIndex) {
	    nodes = nodes || {}


	    if (rootNode) {
	        if (indexInRange(indices, rootIndex, rootIndex)) {
	            nodes[rootIndex] = rootNode
	        }

	        var vChildren = tree.children

	        if (vChildren) {

	            var childNodes = rootNode.childNodes

	            for (var i = 0; i < tree.children.length; i++) {
	                rootIndex += 1

	                var vChild = vChildren[i] || noChild
	                var nextIndex = rootIndex + (vChild.count || 0)

	                // skip recursion down the tree if there are no nodes down here
	                if (indexInRange(indices, rootIndex, nextIndex)) {
	                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
	                }

	                rootIndex = nextIndex
	            }
	        }
	    }

	    return nodes
	}

	// Binary search for an index in the interval [left, right]
	function indexInRange(indices, left, right) {
	    if (indices.length === 0) {
	        return false
	    }

	    var minIndex = 0
	    var maxIndex = indices.length - 1
	    var currentIndex
	    var currentItem

	    while (minIndex <= maxIndex) {
	        currentIndex = ((maxIndex + minIndex) / 2) >> 0
	        currentItem = indices[currentIndex]

	        if (minIndex === maxIndex) {
	            return currentItem >= left && currentItem <= right
	        } else if (currentItem < left) {
	            minIndex = currentIndex + 1
	        } else  if (currentItem > right) {
	            maxIndex = currentIndex - 1
	        } else {
	            return true
	        }
	    }

	    return false;
	}

	function ascending(a, b) {
	    return a > b ? 1 : -1
	}


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var applyProperties = __webpack_require__(7)

	var isWidget = __webpack_require__(13)
	var VPatch = __webpack_require__(19)

	var updateWidget = __webpack_require__(25)

	module.exports = applyPatch

	function applyPatch(vpatch, domNode, renderOptions) {
	    var type = vpatch.type
	    var vNode = vpatch.vNode
	    var patch = vpatch.patch

	    switch (type) {
	        case VPatch.REMOVE:
	            return removeNode(domNode, vNode)
	        case VPatch.INSERT:
	            return insertNode(domNode, patch, renderOptions)
	        case VPatch.VTEXT:
	            return stringPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.WIDGET:
	            return widgetPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.VNODE:
	            return vNodePatch(domNode, vNode, patch, renderOptions)
	        case VPatch.ORDER:
	            reorderChildren(domNode, patch)
	            return domNode
	        case VPatch.PROPS:
	            applyProperties(domNode, patch, vNode.properties)
	            return domNode
	        case VPatch.THUNK:
	            return replaceRoot(domNode,
	                renderOptions.patch(domNode, patch, renderOptions))
	        default:
	            return domNode
	    }
	}

	function removeNode(domNode, vNode) {
	    var parentNode = domNode.parentNode

	    if (parentNode) {
	        parentNode.removeChild(domNode)
	    }

	    destroyWidget(domNode, vNode);

	    return null
	}

	function insertNode(parentNode, vNode, renderOptions) {
	    var newNode = renderOptions.render(vNode, renderOptions)

	    if (parentNode) {
	        parentNode.appendChild(newNode)
	    }

	    return parentNode
	}

	function stringPatch(domNode, leftVNode, vText, renderOptions) {
	    var newNode

	    if (domNode.nodeType === 3) {
	        domNode.replaceData(0, domNode.length, vText.text)
	        newNode = domNode
	    } else {
	        var parentNode = domNode.parentNode
	        newNode = renderOptions.render(vText, renderOptions)

	        if (parentNode && newNode !== domNode) {
	            parentNode.replaceChild(newNode, domNode)
	        }
	    }

	    return newNode
	}

	function widgetPatch(domNode, leftVNode, widget, renderOptions) {
	    var updating = updateWidget(leftVNode, widget)
	    var newNode

	    if (updating) {
	        newNode = widget.update(leftVNode, domNode) || domNode
	    } else {
	        newNode = renderOptions.render(widget, renderOptions)
	    }

	    var parentNode = domNode.parentNode

	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    if (!updating) {
	        destroyWidget(domNode, leftVNode)
	    }

	    return newNode
	}

	function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
	    var parentNode = domNode.parentNode
	    var newNode = renderOptions.render(vNode, renderOptions)

	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    return newNode
	}

	function destroyWidget(domNode, w) {
	    if (typeof w.destroy === "function" && isWidget(w)) {
	        w.destroy(domNode)
	    }
	}

	function reorderChildren(domNode, moves) {
	    var childNodes = domNode.childNodes
	    var keyMap = {}
	    var node
	    var remove
	    var insert

	    for (var i = 0; i < moves.removes.length; i++) {
	        remove = moves.removes[i]
	        node = childNodes[remove.from]
	        if (remove.key) {
	            keyMap[remove.key] = node
	        }
	        domNode.removeChild(node)
	    }

	    var length = childNodes.length
	    for (var j = 0; j < moves.inserts.length; j++) {
	        insert = moves.inserts[j]
	        node = keyMap[insert.key]
	        // this is the weirdest bug i've ever seen in webkit
	        domNode.insertBefore(node, insert.to >= length++ ? null : childNodes[insert.to])
	    }
	}

	function replaceRoot(oldRoot, newRoot) {
	    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
	        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
	    }

	    return newRoot;
	}


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var isWidget = __webpack_require__(13)

	module.exports = updateWidget

	function updateWidget(a, b) {
	    if (isWidget(a) && isWidget(b)) {
	        if ("name" in a && "name" in b) {
	            return a.id === b.id
	        } else {
	            return a.init === b.init
	        }
	    }

	    return false
	}


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(11)

	module.exports = VirtualText

	function VirtualText(text) {
	    this.text = String(text)
	}

	VirtualText.prototype.version = version
	VirtualText.prototype.type = "VirtualText"


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(11)
	var isVNode = __webpack_require__(10)
	var isWidget = __webpack_require__(13)
	var isThunk = __webpack_require__(15)
	var isVHook = __webpack_require__(9)

	module.exports = VirtualNode

	var noProperties = {}
	var noChildren = []

	function VirtualNode(tagName, properties, children, key, namespace) {
	    this.tagName = tagName
	    this.properties = properties || noProperties
	    this.children = children || noChildren
	    this.key = key != null ? String(key) : undefined
	    this.namespace = (typeof namespace === "string") ? namespace : null

	    var count = (children && children.length) || 0
	    var descendants = 0
	    var hasWidgets = false
	    var hasThunks = false
	    var descendantHooks = false
	    var hooks

	    for (var propName in properties) {
	        if (properties.hasOwnProperty(propName)) {
	            var property = properties[propName]
	            if (isVHook(property) && property.unhook) {
	                if (!hooks) {
	                    hooks = {}
	                }

	                hooks[propName] = property
	            }
	        }
	    }

	    for (var i = 0; i < count; i++) {
	        var child = children[i]
	        if (isVNode(child)) {
	            descendants += child.count || 0

	            if (!hasWidgets && child.hasWidgets) {
	                hasWidgets = true
	            }

	            if (!hasThunks && child.hasThunks) {
	                hasThunks = true
	            }

	            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
	                descendantHooks = true
	            }
	        } else if (!hasWidgets && isWidget(child)) {
	            if (typeof child.destroy === "function") {
	                hasWidgets = true
	            }
	        } else if (!hasThunks && isThunk(child)) {
	            hasThunks = true;
	        }
	    }

	    this.count = count + descendants
	    this.hasWidgets = hasWidgets
	    this.hasThunks = hasThunks
	    this.hooks = hooks
	    this.descendantHooks = descendantHooks
	}

	VirtualNode.prototype.version = version
	VirtualNode.prototype.type = "VirtualNode"


/***/ },
/* 28 */
/***/ function(module, exports) {

	'use strict';

	module.exports = SoftSetHook;

	function SoftSetHook(value) {
	    if (!(this instanceof SoftSetHook)) {
	        return new SoftSetHook(value);
	    }

	    this.value = value;
	}

	SoftSetHook.prototype.hook = function (node, propertyName) {
	    if (node[propertyName] !== this.value) {
	        node[propertyName] = this.value;
	    }
	};


/***/ }
/******/ ]);