/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	// Generated by psc-bundle 0.7.3.0
	var PS = { };
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Prelude"];
	  var Semigroupoid = function (compose) {
	      this.compose = compose;
	  };
	  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
	      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
	      this.id = id;
	  };
	  var Functor = function (map) {
	      this.map = map;
	  };
	  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
	      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
	      this.apply = apply;
	  };
	  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
	      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
	      this.pure = pure;
	  };
	  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
	      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
	      this.bind = bind;
	  };
	  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
	      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
	      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
	  };                                                                           
	  var unit = {};                                                         
	  var semigroupoidFn = new Semigroupoid(function (f) {
	      return function (g) {
	          return function (x) {
	              return f(g(x));
	          };
	      };
	  });                 
	  var pure = function (dict) {
	      return dict.pure;
	  };
	  var $$return = function (__dict_Applicative_2) {
	      return pure(__dict_Applicative_2);
	  };
	  var map = function (dict) {
	      return dict.map;
	  };
	  var $less$dollar$greater = function (__dict_Functor_5) {
	      return map(__dict_Functor_5);
	  };
	  var id = function (dict) {
	      return dict.id;
	  };                                                
	  var flip = function (f) {
	      return function (b) {
	          return function (a) {
	              return f(a)(b);
	          };
	      };
	  };
	  var $$const = function (a) {
	      return function (_112) {
	          return a;
	      };
	  };
	  var compose = function (dict) {
	      return dict.compose;
	  };                                                   
	  var $less$less$less = function (__dict_Semigroupoid_14) {
	      return compose(__dict_Semigroupoid_14);
	  };
	  var categoryFn = new Category(function () {
	      return semigroupoidFn;
	  }, function (x) {
	      return x;
	  });
	  var bind = function (dict) {
	      return dict.bind;
	  };
	  var $greater$greater$eq = function (__dict_Bind_24) {
	      return bind(__dict_Bind_24);
	  }; 
	  var apply = function (dict) {
	      return dict.apply;
	  };
	  var $less$times$greater = function (__dict_Apply_25) {
	      return apply(__dict_Apply_25);
	  };
	  var liftA1 = function (__dict_Applicative_26) {
	      return function (f) {
	          return function (a) {
	              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
	          };
	      };
	  }; 
	  var append = function (dict) {
	      return dict.append;
	  };
	  var $less$greater = function (__dict_Semigroup_28) {
	      return append(__dict_Semigroup_28);
	  };
	  var ap = function (__dict_Monad_30) {
	      return function (f) {
	          return function (a) {
	              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_26) {
	                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_25) {
	                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_26(_25));
	                  });
	              });
	          };
	      };
	  };
	  exports["Monad"] = Monad;
	  exports["Bind"] = Bind;
	  exports["Applicative"] = Applicative;
	  exports["Apply"] = Apply;
	  exports["Functor"] = Functor;
	  exports["Category"] = Category;
	  exports["Semigroupoid"] = Semigroupoid;
	  exports["<>"] = $less$greater;
	  exports["append"] = append;
	  exports["ap"] = ap;
	  exports["return"] = $$return;
	  exports[">>="] = $greater$greater$eq;
	  exports["bind"] = bind;
	  exports["liftA1"] = liftA1;
	  exports["pure"] = pure;
	  exports["<*>"] = $less$times$greater;
	  exports["apply"] = apply;
	  exports["<$>"] = $less$dollar$greater;
	  exports["map"] = map;
	  exports["id"] = id;
	  exports["<<<"] = $less$less$less;
	  exports["compose"] = compose;
	  exports["const"] = $$const;
	  exports["flip"] = flip;
	  exports["unit"] = unit;
	  exports["semigroupoidFn"] = semigroupoidFn;
	  exports["categoryFn"] = categoryFn;;
	 
	})(PS["Prelude"] = PS["Prelude"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var $times$greater = function (__dict_Apply_1) {
	      return function (a) {
	          return function (b) {
	              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
	          };
	      };
	  };
	  exports["*>"] = $times$greater;;
	 
	})(PS["Control.Apply"] = PS["Control.Apply"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var $eq$less$less = function (__dict_Bind_1) {
	      return function (f) {
	          return function (m) {
	              return Prelude[">>="](__dict_Bind_1)(m)(f);
	          };
	      };
	  };
	  exports["=<<"] = $eq$less$less;;
	 
	})(PS["Control.Bind"] = PS["Control.Bind"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Control.Monad.Eff

	  exports.returnE = function (a) {
	    return function () {
	      return a;
	    };
	  };

	  exports.bindE = function (a) {
	    return function (f) {
	      return function () {
	        return f(a())();
	      };
	    };
	  };
	 
	})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Eff"];
	  var Prelude = PS["Prelude"];     
	  var monadEff = new Prelude.Monad(function () {
	      return applicativeEff;
	  }, function () {
	      return bindEff;
	  });
	  var bindEff = new Prelude.Bind(function () {
	      return applyEff;
	  }, $foreign.bindE);
	  var applyEff = new Prelude.Apply(function () {
	      return functorEff;
	  }, Prelude.ap(monadEff));
	  var applicativeEff = new Prelude.Applicative(function () {
	      return applyEff;
	  }, $foreign.returnE);
	  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
	  exports["functorEff"] = functorEff;
	  exports["applyEff"] = applyEff;
	  exports["applicativeEff"] = applicativeEff;
	  exports["bindEff"] = bindEff;
	  exports["monadEff"] = monadEff;;
	 
	})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
	(function(exports) {
	  /* global exports, console */
	  "use strict";

	  // module Control.Monad.Eff.Console

	  exports.log = function (s) {
	    return function () {
	      console.log(s);
	      return {};
	    };
	  };
	 
	})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Control.Monad.Eff.Console"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  exports["log"] = $foreign.log;;
	 
	})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module DOM.Event.EventTarget

	  exports.eventListener = function (fn) {
	    return function (event) {
	      return fn(event)();
	    };
	  };

	  exports.addEventListener = function (type) {
	    return function (listener) {
	      return function (useCapture) {
	        return function (target) {
	          return function () {
	            target.addEventListener(type, listener, useCapture);
	            return {};
	          };
	        };
	      };
	    };
	  };
	 
	})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.Event.EventTarget"];
	  var Prelude = PS["Prelude"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
	  var DOM = PS["DOM"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  exports["addEventListener"] = $foreign.addEventListener;
	  exports["eventListener"] = $foreign.eventListener;;
	 
	})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  var load = "load";
	  exports["load"] = load;;
	 
	})(PS["DOM.Event.EventTypes"] = PS["DOM.Event.EventTypes"] || {});
	(function(exports) {
	  /* global exports, window */
	  "use strict";

	  // module DOM.HTML

	  exports.window = function () {
	    return window;
	  };
	 
	})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
	(function(exports) {
	  "use strict";

	  // module Unsafe.Coerce

	  exports.unsafeCoerce = function(x) { return x; }
	 
	})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Unsafe.Coerce"];
	  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
	 
	})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Unsafe_Coerce = PS["Unsafe.Coerce"];
	  var Prelude = PS["Prelude"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];     
	  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;      
	  var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
	  exports["htmlDocumentToDocument"] = htmlDocumentToDocument;
	  exports["windowToEventTarget"] = windowToEventTarget;;
	 
	})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.HTML"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  exports["window"] = $foreign.window;;
	 
	})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module DOM.HTML.Window

	  exports.document = function (window) {
	    return function () {
	      return window.document;
	    };
	  };
	 
	})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.HTML.Window"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var DOM = PS["DOM"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  exports["document"] = $foreign.document;;
	 
	})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.createElement = function (localName) {
	    return function (doc) {
	      return function () {
	        return doc.createElement(localName);
	      };
	    };
	  };
	 
	})(PS["DOM.Node.Document"] = PS["DOM.Node.Document"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["DOM.Node.Document"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Data_Nullable = PS["Data.Nullable"];
	  var DOM = PS["DOM"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];
	  exports["createElement"] = $foreign.createElement;;
	 
	})(PS["DOM.Node.Document"] = PS["DOM.Node.Document"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  // module Data.Foldable

	  exports.foldrArray = function (f) {
	    return function (init) {
	      return function (xs) {
	        var acc = init;
	        var len = xs.length;
	        for (var i = len - 1; i >= 0; i--) {
	          acc = f(xs[i])(acc);
	        }
	        return acc;
	      };
	    };
	  };

	  exports.foldlArray = function (f) {
	    return function (init) {
	      return function (xs) {
	        var acc = init;
	        var len = xs.length;
	        for (var i = 0; i < len; i++) {
	          acc = f(acc)(xs[i]);
	        }
	        return acc;
	      };
	    };
	  };
	 
	})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var mempty = function (dict) {
	      return dict.mempty;
	  };
	  exports["mempty"] = mempty;;
	 
	})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Prelude = PS["Prelude"];
	  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
	  var Control_Alt = PS["Control.Alt"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_Extend = PS["Control.Extend"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];
	  var Control_Plus = PS["Control.Plus"];
	  var Data_Monoid = PS["Data.Monoid"];     
	  var Nothing = (function () {
	      function Nothing() {

	      };
	      Nothing.value = new Nothing();
	      return Nothing;
	  })();
	  var Just = (function () {
	      function Just(value0) {
	          this.value0 = value0;
	      };
	      Just.create = function (value0) {
	          return new Just(value0);
	      };
	      return Just;
	  })();
	  exports["Nothing"] = Nothing;
	  exports["Just"] = Just;;
	 
	})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Foldable"];
	  var Prelude = PS["Prelude"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Control_Apply = PS["Control.Apply"];
	  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
	  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Maybe_First = PS["Data.Maybe.First"];
	  var Data_Maybe_Last = PS["Data.Maybe.Last"];
	  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
	  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
	  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
	  var Foldable = function (foldMap, foldl, foldr) {
	      this.foldMap = foldMap;
	      this.foldl = foldl;
	      this.foldr = foldr;
	  };
	  var foldr = function (dict) {
	      return dict.foldr;
	  };
	  var traverse_ = function (__dict_Applicative_0) {
	      return function (__dict_Foldable_1) {
	          return function (f) {
	              return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
	          };
	      };
	  };
	  var for_ = function (__dict_Applicative_2) {
	      return function (__dict_Foldable_3) {
	          return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
	      };
	  };
	  var foldl = function (dict) {
	      return dict.foldl;
	  }; 
	  var foldableArray = new Foldable(function (__dict_Monoid_19) {
	      return function (f) {
	          return function (xs) {
	              return foldr(foldableArray)(function (x) {
	                  return function (acc) {
	                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
	                  };
	              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
	          };
	      };
	  }, $foreign.foldlArray, $foreign.foldrArray);
	  var foldMap = function (dict) {
	      return dict.foldMap;
	  };
	  exports["Foldable"] = Foldable;
	  exports["for_"] = for_;
	  exports["traverse_"] = traverse_;
	  exports["foldMap"] = foldMap;
	  exports["foldl"] = foldl;
	  exports["foldr"] = foldr;
	  exports["foldableArray"] = foldableArray;;
	 
	})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var $foreign = PS["Data.Traversable"];
	  var Prelude = PS["Prelude"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Maybe_First = PS["Data.Maybe.First"];
	  var Data_Maybe_Last = PS["Data.Maybe.Last"];
	  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
	  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
	  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
	  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
	  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
	  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
	      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
	      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
	      this.sequence = sequence;
	      this.traverse = traverse;
	  };
	  var traverse = function (dict) {
	      return dict.traverse;
	  };
	  var sequence = function (dict) {
	      return dict.sequence;
	  };
	  exports["Traversable"] = Traversable;
	  exports["sequence"] = sequence;
	  exports["traverse"] = traverse;;
	 
	})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.2.0
	  "use strict";
	  var Data_Unfoldable = PS["Data.Unfoldable"];
	  var Prelude = PS["Prelude"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Control_Lazy = PS["Control.Lazy"];
	  var Control_Alt = PS["Control.Alt"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_Monoid = PS["Data.Monoid"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Data_Tuple = PS["Data.Tuple"];
	  var Control_Plus = PS["Control.Plus"];
	  var Control_Alternative = PS["Control.Alternative"];
	  var Control_MonadPlus = PS["Control.MonadPlus"];     
	  var Nil = (function () {
	      function Nil() {

	      };
	      Nil.value = new Nil();
	      return Nil;
	  })();
	  var Cons = (function () {
	      function Cons(value0, value1) {
	          this.value0 = value0;
	          this.value1 = value1;
	      };
	      Cons.create = function (value0) {
	          return function (value1) {
	              return new Cons(value0, value1);
	          };
	      };
	      return Cons;
	  })();
	  var toList = function (__dict_Foldable_3) {
	      return Data_Foldable.foldr(__dict_Foldable_3)(Cons.create)(Nil.value);
	  };
	  var functorList = new Prelude.Functor(function (f) {
	      return function (_809) {
	          if (_809 instanceof Nil) {
	              return Nil.value;
	          };
	          if (_809 instanceof Cons) {
	              return new Cons(f(_809.value0), Prelude["<$>"](functorList)(f)(_809.value1));
	          };
	          throw new Error("Failed pattern match: " + [ f.constructor.name, _809.constructor.name ]);
	      };
	  });
	  var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
	      return function (f) {
	          return function (_812) {
	              if (_812 instanceof Nil) {
	                  return Data_Monoid.mempty(__dict_Monoid_16);
	              };
	              if (_812 instanceof Cons) {
	                  return Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(f(_812.value0))(Data_Foldable.foldMap(foldableList)(__dict_Monoid_16)(f)(_812.value1));
	              };
	              throw new Error("Failed pattern match: " + [ f.constructor.name, _812.constructor.name ]);
	          };
	      };
	  }, function (o) {
	      return function (b) {
	          return function (_811) {
	              if (_811 instanceof Nil) {
	                  return b;
	              };
	              if (_811 instanceof Cons) {
	                  return Data_Foldable.foldl(foldableList)(o)(o(b)(_811.value0))(_811.value1);
	              };
	              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _811.constructor.name ]);
	          };
	      };
	  }, function (o) {
	      return function (b) {
	          return function (_810) {
	              if (_810 instanceof Nil) {
	                  return b;
	              };
	              if (_810 instanceof Cons) {
	                  return o(_810.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_810.value1));
	              };
	              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _810.constructor.name ]);
	          };
	      };
	  });
	  var traversableList = new Data_Traversable.Traversable(function () {
	      return foldableList;
	  }, function () {
	      return functorList;
	  }, function (__dict_Applicative_2) {
	      return function (_815) {
	          if (_815 instanceof Nil) {
	              return Prelude.pure(__dict_Applicative_2)(Nil.value);
	          };
	          if (_815 instanceof Cons) {
	              return Prelude["<*>"](__dict_Applicative_2["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_815.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_2)(_815.value1));
	          };
	          throw new Error("Failed pattern match: " + [ _815.constructor.name ]);
	      };
	  }, function (__dict_Applicative_1) {
	      return function (f) {
	          return function (_814) {
	              if (_814 instanceof Nil) {
	                  return Prelude.pure(__dict_Applicative_1)(Nil.value);
	              };
	              if (_814 instanceof Cons) {
	                  return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_814.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_1)(f)(_814.value1));
	              };
	              throw new Error("Failed pattern match: " + [ f.constructor.name, _814.constructor.name ]);
	          };
	      };
	  });
	  exports["Nil"] = Nil;
	  exports["Cons"] = Cons;
	  exports["toList"] = toList;
	  exports["functorList"] = functorList;
	  exports["foldableList"] = foldableList;
	  exports["traversableList"] = traversableList;;
	 
	})(PS["Data.List"] = PS["Data.List"] || {});
	(function(exports) {
	  /* global exports */
	  "use strict";

	  exports.getContext2D = function(c) {
	      return function() {
	          return c.getContext('2d');
	      };
	  };

	  exports.setCanvasWidth = function(width) {
	      return function(canvas) {
	          return function() {
	              canvas.width = width;
	              return canvas;
	          };
	      };
	  };

	  exports.setCanvasHeight = function(height) {
	      return function(canvas) {
	          return function() {
	              canvas.height = height;
	              return canvas;
	          };
	      };
	  };

	  exports.clearRect = function(ctx) {
	      return function(r) {
	          return function() {
	              ctx.clearRect(r.x, r.y, r.w, r.h);
	              return ctx;
	          };
	      };
	  };

	  exports.drawImage = function(ctx) {
	      return function(image_source) {
	          return function(dx) {
	              return function(dy) {
	                  return function() {
	                      ctx.drawImage(image_source, dx, dy);
	                      return ctx;
	                  };
	              };
	          };
	      };
	  };

	  exports.drawImageFull = function(ctx) {
	      return function(image_source) {
	          return function(sx) {
	              return function(sy) {
	                  return function(sWidth) {
	                      return function(sHeight) {
	                          return function(dx) {
	                              return function(dy) {
	                                  return function(dWidth) {
	                                      return function(dHeight) {
	                                          return function() {
	                                              ctx.drawImage(image_source, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);
	                                              return ctx;
	                                          };
	                                      };
	                                  };
	                              };
	                          };
	                      };
	                  };
	              };
	          };
	      };
	  };
	 
	})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.3.0
	  "use strict";
	  var $foreign = PS["Graphics.Canvas"];
	  var Data_Function = PS["Data.Function"];
	  var Prelude = PS["Prelude"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  exports["drawImageFull"] = $foreign.drawImageFull;
	  exports["clearRect"] = $foreign.clearRect;
	  exports["setCanvasHeight"] = $foreign.setCanvasHeight;
	  exports["setCanvasWidth"] = $foreign.setCanvasWidth;
	  exports["getContext2D"] = $foreign.getContext2D;;
	 
	})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
	(function(exports) {
	  "use strict";

	  // module Utils

	  exports.getCanvasImageSourceByIdImpl = function (id, Just, Nothing) {
	      return function() {
	          var el = document.getElementById(id);
	          if (el && el instanceof HTMLImageElement) {
	              return Just(el);
	          } else {
	              return Nothing;
	          }
	      };
	  };

	  exports.getImageDimensions = function (img) {
	      return function () {
	          return { w: img.naturalWidth, h: img.naturalHeight };
	      };
	  };

	  exports.canvasToDataURL_ = function (type) {
	      return function (encoderOptions) {
	          return function (canvas) {
	              return function () {
	                  return canvas.toDataURL(type, encoderOptions);
	              };
	          };
	      };
	  };
	 
	})(PS["Utils"] = PS["Utils"] || {});
	(function(exports) {
	  "use strict";

	  // module Types

	  exports.elementToCanvasElement = function (el) {
	      return el;
	  };
	 
	})(PS["Types"] = PS["Types"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.3.0
	  "use strict";
	  var $foreign = PS["Types"];
	  var Prelude = PS["Prelude"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];
	  var Graphics_Canvas = PS["Graphics.Canvas"];
	  exports["elementToCanvasElement"] = $foreign.elementToCanvasElement;;
	 
	})(PS["Types"] = PS["Types"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.3.0
	  "use strict";
	  var $foreign = PS["Utils"];
	  var Data_Function = PS["Data.Function"];
	  var Prelude = PS["Prelude"];
	  var DOM_HTML_Types = PS["DOM.HTML.Types"];
	  var Control_Bind = PS["Control.Bind"];
	  var DOM_HTML_Window = PS["DOM.HTML.Window"];
	  var DOM_HTML = PS["DOM.HTML"];
	  var Types = PS["Types"];
	  var DOM_Node_Document = PS["DOM.Node.Document"];
	  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
	  var DOM_Event_EventTypes = PS["DOM.Event.EventTypes"];
	  var DOM = PS["DOM"];
	  var DOM_Node_Types = PS["DOM.Node.Types"];
	  var DOM_Event_Types = PS["DOM.Event.Types"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Graphics_Canvas = PS["Graphics.Canvas"];     
	  var getCanvasImageSourceById = function (elId) {
	      return $foreign.getCanvasImageSourceByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
	  };
	  var createCanvasElement = function __do() {
	      var _0 = Prelude["<$>"](Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Control_Bind["=<<"](Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))();
	      return Prelude["<$>"](Control_Monad_Eff.functorEff)(Types.elementToCanvasElement)(DOM_Node_Document.createElement("canvas")(_0))();
	  };
	  var aspectRatio = function (_7) {
	      return _7.w / _7.h;
	  };
	  var always = function (a) {
	      return function (b) {
	          return a;
	      };
	  };
	  var onWindowLoad = function (eff) {
	      return Control_Bind["=<<"](Control_Monad_Eff.bindEff)(Prelude["<<<"](Prelude.semigroupoidFn)(DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(always(eff)))(false))(DOM_HTML_Types.windowToEventTarget))(DOM_HTML.window);
	  };
	  exports["aspectRatio"] = aspectRatio;
	  exports["always"] = always;
	  exports["onWindowLoad"] = onWindowLoad;
	  exports["createCanvasElement"] = createCanvasElement;
	  exports["getCanvasImageSourceById"] = getCanvasImageSourceById;
	  exports["canvasToDataURL_"] = $foreign.canvasToDataURL_;
	  exports["getImageDimensions"] = $foreign.getImageDimensions;;
	 
	})(PS["Utils"] = PS["Utils"] || {});
	(function(exports) {
	  // Generated by psc version 0.7.3.0
	  "use strict";
	  var Data_List = PS["Data.List"];
	  var Prelude = PS["Prelude"];
	  var Utils = PS["Utils"];
	  var Graphics_Canvas = PS["Graphics.Canvas"];
	  var Data_Traversable = PS["Data.Traversable"];
	  var Data_Foldable = PS["Data.Foldable"];
	  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
	  var DOM = PS["DOM"];
	  var Data_Maybe = PS["Data.Maybe"];
	  var Control_Monad_Eff = PS["Control.Monad.Eff"];
	  var Types = PS["Types"];     
	  var targetSizes = Data_List.toList(Data_Foldable.foldableArray)([ {
	      w: 1000.0, 
	      h: 600.0
	  }, {
	      w: 800.0, 
	      h: 200.0
	  }, {
	      w: 610.0, 
	      h: 405.0
	  } ]);
	  var croppingProps = function (src) {
	      return function (target) {
	          var srcHasHigherAspectRatioThanTarget = Utils.aspectRatio(src) > Utils.aspectRatio(target);
	          var top = (function () {
	              if (srcHasHigherAspectRatioThanTarget) {
	                  return 0.0;
	              };
	              if (!srcHasHigherAspectRatioThanTarget) {
	                  return (src.h - src.w / Utils.aspectRatio(target)) / 2.0;
	              };
	              throw new Error("Failed pattern match at Impressor line 42, column 1 - line 43, column 1: " + [ srcHasHigherAspectRatioThanTarget.constructor.name ]);
	          })();
	          var width = (function () {
	              if (srcHasHigherAspectRatioThanTarget) {
	                  return src.h * Utils.aspectRatio(target);
	              };
	              if (!srcHasHigherAspectRatioThanTarget) {
	                  return src.w;
	              };
	              throw new Error("Failed pattern match at Impressor line 42, column 1 - line 43, column 1: " + [ srcHasHigherAspectRatioThanTarget.constructor.name ]);
	          })();
	          var left = (function () {
	              if (srcHasHigherAspectRatioThanTarget) {
	                  return (src.w - src.h * Utils.aspectRatio(target)) / 2.0;
	              };
	              if (!srcHasHigherAspectRatioThanTarget) {
	                  return 0.0;
	              };
	              throw new Error("Failed pattern match at Impressor line 42, column 1 - line 43, column 1: " + [ srcHasHigherAspectRatioThanTarget.constructor.name ]);
	          })();
	          var height = (function () {
	              if (srcHasHigherAspectRatioThanTarget) {
	                  return src.h;
	              };
	              if (!srcHasHigherAspectRatioThanTarget) {
	                  return src.w / Utils.aspectRatio(target);
	              };
	              throw new Error("Failed pattern match at Impressor line 42, column 1 - line 43, column 1: " + [ srcHasHigherAspectRatioThanTarget.constructor.name ]);
	          })();
	          return {
	              left: left, 
	              top: top, 
	              w: width, 
	              h: height
	          };
	      };
	  };
	  var createImages = function (_6) {
	      return function (srcSize) {
	          return function (targetSizes_1) {
	              var processImage = function (targetSize) {
	                  var croppingProps$prime = croppingProps(srcSize)(targetSize);
	                  return Graphics_Canvas.drawImageFull(_6.ctx)(_6.img)(croppingProps$prime.left)(croppingProps$prime.top)(croppingProps$prime.w)(croppingProps$prime.h)(0.0)(0.0)(targetSize.w)(targetSize.h);
	              };
	              var createImage = function (targetSize) {
	                  return function __do() {
	                      Graphics_Canvas.setCanvasWidth(targetSize.w)(_6.el)();
	                      Graphics_Canvas.setCanvasHeight(targetSize.h)(_6.el)();
	                      processImage(targetSize)();
	                      var _0 = Utils.canvasToDataURL_("image/jpeg")(0.85)(_6.el)();
	                      Graphics_Canvas.clearRect(_6.ctx)({
	                          x: 0.0, 
	                          y: 0.0, 
	                          w: targetSize.w, 
	                          h: targetSize.h
	                      })();
	                      return Prelude["return"](Control_Monad_Eff.applicativeEff)(_0)();
	                  };
	              };
	              return Data_Traversable.traverse(Data_List.traversableList)(Control_Monad_Eff.applicativeEff)(createImage)(targetSizes_1);
	          };
	      };
	  };
	  var main = Utils.onWindowLoad(function __do() {
	      var _5 = Utils.createCanvasElement();
	      var _4 = Graphics_Canvas.getContext2D(_5)();
	      var _3 = Utils.getCanvasImageSourceById("image")();
	      if (_3 instanceof Data_Maybe.Just) {
	          var _2 = Utils.getImageDimensions(_3.value0)();
	          var _1 = createImages({
	              el: _5, 
	              ctx: _4, 
	              img: _3.value0
	          })(_2)(targetSizes)();
	          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(_1)(function (img$prime) {
	              return Control_Monad_Eff_Console.log(img$prime);
	          })();
	      };
	      throw new Error("Failed pattern match at Impressor line 79, column 1 - line 80, column 1: " + [ _3.constructor.name ]);
	  });
	  exports["main"] = main;
	  exports["createImages"] = createImages;
	  exports["croppingProps"] = croppingProps;
	  exports["targetSizes"] = targetSizes;;
	 
	})(PS["Impressor"] = PS["Impressor"] || {});

	PS["Impressor"].main();

/***/ }
/******/ ]);